{"version":3,"file":"content.js","mappings":"uCACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,mBAUR,SAA4BC,GACxBC,QAAQC,IAAI,GAAGC,EAAWC,oDAAqDJ,GAC/E,IAAIK,EAAwB,EAC5B,IACI,GAAIL,EAAc,EA4L1B,WACI,IACI,MAAMM,EAAaC,aAAaC,QAAQL,EAAWM,iBACnD,GAAIH,EAAY,CACZ,MAAMI,EAAQC,KAAKC,MAAMN,GACzBO,EAAgBH,EAAMI,OAClBJ,EAAMK,WACNC,EAAgBN,EAAMK,SAC9B,CACJ,CACA,MAAOE,GACHhB,QAAQgB,MAAM,6BAA8BA,EAChD,CACJ,CAxMYC,GAoCZ,WACI,GAAIC,GAAiBC,SAASC,KAAKC,SAASH,GACxC,OACJA,EAAgBC,SAASG,cAAc,OACvCJ,EAAcK,GAAKrB,EAAWsB,SAC9BN,EAAcO,MAAMC,QAAU,+BAE5BX,EAAcY,OAAS,WAAaZ,EAAcY,OAAS,IAAM,WACjEZ,EAAca,MAAQ,UAAYb,EAAca,MAAQ,IAAM,WAC9Db,EAAcc,IAAM,QAAUd,EAAcc,IAAM,IAAM,WACxDd,EAAce,KAAO,SAAWf,EAAce,KAAO,IAAM,qYAa7D,MAAMC,EAASZ,SAASG,cAAc,OACtCS,EAAON,MAAMC,QAAU,uMASvBK,EAAOC,UAAY,yDAC+B9B,EAAW+B,oFAE7C/B,EAAWgC,mUAYXhC,EAAWiC,2TAc3BjB,EAAckB,YAAYL,GAC1B,MAAMM,EAAUlB,SAASG,cAAc,OACvCe,EAAQd,GAAKrB,EAAWoC,WACxBD,EAAQZ,MAAMC,QAAU,+FAMxBR,EAAckB,YAAYC,GAC1BlB,SAASC,KAAKgB,YAAYlB,GA+K9B,SAAuBqB,EAASC,GAC5B,IAAIC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAEzC,SAASC,EAAcC,GACnBA,EAAEC,iBACFJ,EAAOG,EAAEE,QACTJ,EAAOE,EAAEG,QACT9B,SAAS+B,UAAYC,EACrBhC,SAASiC,YAAcC,CAC3B,CACA,SAASA,EAAYP,GACjBA,EAAEC,iBACFN,EAAOE,EAAOG,EAAEE,QAChBN,EAAOE,EAAOE,EAAEG,QAChBN,EAAOG,EAAEE,QACTJ,EAAOE,EAAEG,QACTV,EAAQd,MAAMI,IAAOU,EAAQe,UAAYZ,EAAQ,KACjDH,EAAQd,MAAMK,KAAQS,EAAQgB,WAAad,EAAQ,KACnDF,EAAQd,MAAMG,MAAQ,OACtBW,EAAQd,MAAME,OAAS,OACvBZ,EAAgB,CAAEc,IAAKU,EAAQd,MAAMI,IAAKC,KAAMS,EAAQd,MAAMK,KAAMF,MAAO,GAAID,OAAQ,GAC3F,CACA,SAASwB,IACLhC,SAAS+B,UAAY,KACrB/B,SAASiC,YAAc,KACvBI,GACJ,CAxBAhB,EAAOiB,YAAcZ,CAyBzB,CAzMIa,CAAcxC,EAAea,GAC7B,MAAM4B,EAAczC,EAAc0C,cAAc,IAAI1D,EAAWgC,mBAC3DyB,GACAA,EAAYE,iBAAiB,SAAS,KAClC,MAAMC,EAAc5C,aAAqD,EAASA,EAAc0C,cAAc,IAAI1D,EAAWoC,cAC3F,SAA9BwB,EAAYrC,MAAMsC,SAClBD,EAAYrC,MAAMsC,QAAU,QAC5BJ,EAAYK,YAAc,MAG1BF,EAAYrC,MAAMsC,QAAU,OAC5BJ,EAAYK,YAAc,IAC9B,IAGR,MAAMC,EAAU/C,EAAc0C,cAAc,IAAI1D,EAAWiC,eACvD8B,GACAA,EAAQJ,iBAAiB,SAAS,KAAQK,IAAaV,GAAgB,KAG/E,WACQW,GAAchD,SAASC,KAAKC,SAAS8C,IACrChD,SAASC,KAAKgD,YAAYD,GAC9BA,EAAahD,SAASG,cAAc,OACpC6C,EAAW5C,GAAKrB,EAAWmE,YAC3BF,EAAW1C,MAAMC,QAAU,yWAiB3ByC,EAAWnC,UAAY,8CACvBmC,EAAWG,MAAQpE,EAAW+B,YAC9BkC,EAAWN,iBAAiB,SAAS,KAAQU,IAAaf,GAAgB,IAC1ErC,SAASC,KAAKgB,YAAY+B,EAC9B,CA5BIK,EACJ,CA/HYC,GACA,MAAMC,EAAWvD,SAASwD,iBAAiBzE,EAAW0E,mBACtDC,EAAeC,QACfJ,EAASK,SAAQC,IACb,MACMC,GADcD,EAAShB,aAAe,IACZkB,OAChC,IAAKD,IAAe,EAAIE,EAAYC,eAAeH,GAC/C,OACJ,MAAMI,EA8StB,SAAgCC,GAC5B,IACI,MAAMC,EAAUD,EAAKE,QAAQ,OAAQ,KAAKN,OACpCO,GAAO,EAAIN,EAAYO,gBAAgBH,GAC7C,OAAIE,EACO,CAAEA,OAAM1B,QAASwB,GACrB,IACX,CACA,MAAOvE,GAEH,OADAhB,QAAQgB,MAAM,sCAAuCA,GAC9C,IACX,CACJ,CA1TiC2E,CAAuBV,GACxC,GAAII,EAAU,CACV,MAAM,KAAEI,EAAI,QAAE1B,GAAYsB,EACpBO,EAASC,EAAQC,UAAUL,GAC3BM,EAAc,GAAG7F,EAAW8F,eAAeJ,EAAOK,GAAK,MAAML,EAAOM,OAAON,EAAOO,KACxFtB,EAAeuB,IAAIrC,EAAS,CAAEgC,cAAaxD,QAASyC,IACpD5E,IACAJ,QAAQC,IAAI,GAAGC,EAAWC,+BAAgC4D,EAAS,KAAMgC,EAC7E,KAwLhB,WACI,IAAK7E,EACD,OACJ,MAAMmB,EAAUnB,EAAc0C,cAAc,IAAI1D,EAAWoC,cAC3D,IAAKD,EACD,OACJ,GAA4B,IAAxBwC,EAAewB,KAMf,YALAhE,EAAQL,UAAY,mFAElB9B,EAAWoG,wCAKjB,IAAIC,EAAO,GACX1B,EAAeE,SAAQ,EAAGgB,cAAaxD,WAAWiE,KAC9CD,GAAQ,2PAGwDC,MAAkBT,4FAG9ES,uCAGP,IAEDD,GAAQ,iGAEJrG,EAAWuG,oCAGfpE,EAAQL,UAAYuE,EACClE,EAAQsC,iBAAiB,mBACjCI,SAAQxC,IACjBA,EAAQsB,iBAAiB,SAAUf,IAC/B,MACM0D,EADS1D,EAAE4D,OACYC,aAAa,aAC1C,IAAKH,EACD,OACJ,MAAMI,EAAa/B,EAAegC,IAAIL,GACtC,IAAKI,EACD,OACJA,EAAWrE,QAAQuE,eAAe,CAAEC,SAAU,SAAUC,MAAO,WAC/D,MAAMC,EAAkBL,EAAWrE,QACnC0E,EAAgBxF,MAAMyF,gBAAkB,UACxCC,YAAW,KAAQF,EAAgBxF,MAAMyF,gBAAkB,EAAE,GAAK,IAAK,GACzE,GAEV,CAvOYE,GACIxG,EACAsD,IAEAK,GACR,MAEI8C,IACAxC,EAAeC,QAEnB,OAAO1E,CACX,CACA,MAAOY,GAEH,OADAhB,QAAQgB,MAAM,gCAAiCA,GACxCZ,CACX,CACJ,EAjDAR,EAAQ0H,4BAkVR,WACItH,QAAQC,IAAI,GAAGC,EAAWC,gDAC1B,MAAMoH,EAAQ1C,EAAewB,KAG7B,OAFAxB,EAAeC,QACfuC,IACOE,CACX,EAvVA,MAAM1B,EAAU,EAAQ,KAClBV,EAAc,EAAQ,KACtBjF,EAAa,EAAQ,KAC3B,IAAIgB,EAAgB,KAChBiD,EAAa,KACjB,MAAMU,EAAiB,IAAI2C,IAC3B,IAAI5G,GAAgB,EAChBG,EAAgB,CAAEc,IAAK,GAAIC,KAAM,GAAIF,MAAO,OAAQD,OAAQ,QAkKhE,SAASuC,IACAhD,GAAkBiD,IAEnBjD,EAAcO,MAAMI,MACpBd,EAAcc,IAAMX,EAAcO,MAAMI,KACxCX,EAAcO,MAAMK,OACpBf,EAAce,KAAOZ,EAAcO,MAAMK,MACzCZ,EAAcO,MAAMG,QACpBb,EAAca,MAAQV,EAAcO,MAAMG,OAC1CV,EAAcO,MAAME,SACpBZ,EAAcY,OAAST,EAAcO,MAAME,QAC/CT,EAAcO,MAAMsC,QAAU,OAC9BI,EAAW1C,MAAMsC,QAAU,OAC3BnD,GAAgB,EACpB,CACA,SAAS2D,IACArD,GAAkBiD,IAEvBjD,EAAcO,MAAMsC,QAAU,OAC9BI,EAAW1C,MAAMsC,QAAU,OAC3BnD,GAAgB,EACpB,CACA,SAAS4C,IACL,IACI,MAAM/C,EAAQ,CAAEI,OAAQD,EAAeE,SAAUC,GACjDT,aAAamH,QAAQvH,EAAWM,gBAAiBE,KAAKgH,UAAUjH,GACpE,CACA,MAAOO,GACHhB,QAAQgB,MAAM,4BAA6BA,EAC/C,CACJ,CAuFA,SAASqG,IACDnG,GAAiBC,SAASC,KAAKC,SAASH,KACxCC,SAASC,KAAKgD,YAAYlD,GAC1BA,EAAgB,MAEhBiD,GAAchD,SAASC,KAAKC,SAAS8C,KACrChD,SAASC,KAAKgD,YAAYD,GAC1BA,EAAa,KAErB,C,kCC1SA,IAAIwD,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUvI,GAAS,IAAMwI,EAAKL,EAAUM,KAAKzI,GAAS,CAAE,MAAOiD,GAAKqF,EAAOrF,EAAI,CAAE,CAC1F,SAASyF,EAAS1I,GAAS,IAAMwI,EAAKL,EAAiB,MAAEnI,GAAS,CAAE,MAAOiD,GAAKqF,EAAOrF,EAAI,CAAE,CAC7F,SAASuF,EAAKG,GAJlB,IAAe3I,EAIa2I,EAAOC,KAAOP,EAAQM,EAAO3I,QAJ1CA,EAIyD2I,EAAO3I,MAJhDA,aAAiBkI,EAAIlI,EAAQ,IAAIkI,GAAE,SAAUG,GAAWA,EAAQrI,EAAQ,KAIjB6I,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACA5I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgJ,kBA2BR,SAA2B7I,GACvB,OAAO4H,EAAUC,UAAM,OAAQ,GAAQ,YACnC,MAAMiB,EAAYC,KAAKC,MACvB/I,QAAQC,IAAI,GAAGC,EAAWC,4DAA6DJ,GACvFiJ,GAA0B,EAC1B,IAAIC,EAAqB,EACzB,IACI,MAAMC,EAAW/H,SAASwD,iBAAiBzE,EAAWiJ,sBACtD,IAAK,MAAMC,KAAMF,EAAU,CACvB,IAAKG,EAAiBD,GAClB,SACJ,MAAME,EAAcF,EAAGG,UAAUrE,OACjC,IAAKoE,EACD,SACJ,MAAOE,EAAeC,GAAeH,EAAYI,MAAM,KAAKC,KAAIC,GAAKA,EAAE1E,SACvE,GAAInF,EAAc,CACd,IAAI,EAAIoF,EAAYC,eAAeoE,GAC/B,SACJ,MAAMK,GAAY,EAAI1E,EAAYO,gBAAgB8D,GAC5CM,EAAUL,GAAc,EAAItE,EAAYO,gBAAgB+D,GAAe,KAC7E,GAAII,EAAW,CACX,MAAME,EAAc,WAAWC,KAAKR,GAAiBS,EAAoBJ,IAAa,EAAI1E,EAAY+E,cAAcL,GAC9GM,EAAYL,EAAW,WAAWE,KAAKP,GAAeQ,EAAoBH,IAAW,EAAI3E,EAAY+E,cAAcJ,GAAY,KACrI,GAAoB,iBAAhBC,GAAmCD,GAAyB,iBAAdK,EAC9C,SACJ,MAAMC,EAAcD,EAAY,GAAGJ,OAAiBI,IAAcJ,EAC5DM,QAAkBC,EAA6BF,GACjDhB,EAAGG,YAAcc,IACZjB,EAAGmB,aAAarK,EAAWsK,aAAaC,gBACzCrB,EAAGsB,aAAaxK,EAAWsK,aAAaC,cAAenB,GAE3DF,EAAGG,UAAYc,EACfpB,IACAjJ,QAAQC,IAAI,GAAGC,EAAWC,uBAAwBmJ,EAAa,KAAMe,GAE7E,CACJ,MAEI,IAAI,EAAIlF,EAAYC,eAAeoE,IAAkBJ,EAAGmB,aAAarK,EAAWsK,aAAaC,eAAgB,CACzG,MAAME,EAAevB,EAAGzC,aAAazG,EAAWsK,aAAaC,eAC7D,GAAIE,EACAvB,EAAGG,UAAYoB,EACfvB,EAAGwB,gBAAgB1K,EAAWsK,aAAaC,eAC3CxB,IACAjJ,QAAQC,IAAI,GAAGC,EAAWC,qCAAsCwK,OAE/D,CACD,MAAME,GAAiB,EAAI1F,EAAY2F,oBAAoBtB,GACrDuB,EAAetB,GAAc,EAAItE,EAAY2F,oBAAoBrB,GAAe,KACtF,GAAIoB,EAAgB,CAChB,MAAMG,EAAiBD,EAAe,GAAGF,OAAoBE,IAAiBF,EACxER,QAAkBC,EAA6BU,GACrD5B,EAAGG,UAAYc,EACfpB,IACAjJ,QAAQC,IAAI,GAAGC,EAAWC,6CAA8CmJ,EAAa,KAAMe,EAC/F,CACJ,CACJ,CAER,CACAY,EAAyBpC,EACzB7I,QAAQC,IAAI,GAAGC,EAAWC,wBAAwB8I,UACtD,CACA,MAAOjI,GACHhB,QAAQgB,MAAM,2BAA4BA,GAC1CkK,GACJ,CACA,QACIlC,GAA0B,CAC9B,CACA,OAAOC,CACX,GACJ,EAlGArJ,EAAQuL,oBAsGR,WACI,OAAOxD,EAAUC,UAAM,OAAQ,GAAQ,YACnC5H,QAAQC,IAAI,GAAGC,EAAWC,wCAC1B6I,GAA0B,EAC1B,IAAIoC,EAAiB,EACrB,IACIF,EAA2B,EAC3B/J,SAASwD,iBAAiB,IAAIzE,EAAWsK,aAAaC,kBAAkB1F,SAAQqE,IAC5E,MAAMuB,EAAevB,EAAGzC,aAAazG,EAAWsK,aAAaC,eACzDE,IACAvB,EAAGG,UAAYoB,EACfvB,EAAGwB,gBAAgB1K,EAAWsK,aAAaC,eAC3CW,IACApL,QAAQC,IAAI,GAAGC,EAAWC,qCAAsCwK,GACpE,IAEJ,MAAMzB,EAAW/H,SAASwD,iBAAiBzE,EAAWiJ,sBACtD,IAAK,MAAMC,KAAMF,EAAU,CACvB,IAAKG,EAAiBD,GAClB,SACJ,MAAME,EAAcF,EAAGG,UAAUrE,OACjC,IAAKoE,KAAgB,EAAInE,EAAYC,eAAekE,IAAgBF,EAAGmB,aAAarK,EAAWsK,aAAaC,eACxG,SACJ,MAAOjB,EAAeC,GAAeH,EAAYI,MAAM,KAAKC,KAAIC,GAAKA,EAAE1E,SACjE2F,GAAiB,EAAI1F,EAAY2F,oBAAoBtB,GACrDuB,EAAetB,GAAc,EAAItE,EAAY2F,oBAAoBrB,GAAe,KACtF,GAAIoB,EAAgB,CAChB,MAAMG,EAAiBD,EAAe,GAAGF,OAAoBE,IAAiBF,EACxER,QAAkBC,EAA6BU,GACrD5B,EAAGG,UAAYc,EACfe,IACApL,QAAQC,IAAI,GAAGC,EAAWC,6CAA8CmJ,EAAa,KAAMe,EAC/F,CACJ,CACArK,QAAQC,IAAI,GAAGC,EAAWC,oBAAoBiL,eAClD,CACA,QACIpC,GAA0B,CAC9B,CACA,OAAOoC,CACX,GACJ,EA9IAxL,EAAQyL,wBA+IR,SAAiCC,EAAkBpL,EAAWqL,mBAC1D,OAAQzC,KAAKC,MAAQkC,EAA0BK,CACnD,EAhJA1L,EAAQ4L,2BAiJR,WACI,OAAOxC,CACX,EAlJApJ,EAAQ6L,cAmJR,WACI,OAAOP,CACX,EApJA,MAAM/F,EAAc,EAAQ,KACtBjF,EAAa,EAAQ,KACrB2F,EAAU,EAAQ,KACxB,IAAIqF,EAA2B,EAC3BlC,GAA0B,EAC1BiC,EAAyB,EAC7B,SAAShB,EAAoBxE,GACzB,MAAMiG,EAAI7F,EAAQC,UAAUL,GAC5B,MAAO,GAAGvF,EAAW8F,eAAe0F,EAAEzF,GAAK,MAAMyF,EAAExF,OAAOwF,EAAEvF,IAChE,CAIA,SAASmE,EAA6BhF,GAClC,OAAOqC,EAAUC,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIK,SAASC,IAChByD,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAaC,kBAAmBC,IAChE9D,EAAQ8D,EAAK9L,EAAW4L,aAAaC,iBAAmCzG,EANvEE,QAAQ,OAAOyG,GAAK,aAAaC,SAASD,MAMqC3G,EAAK,GACvF,GAEV,GACJ,CA0EA,SAAS+D,EAAiB9G,GACtB,SAAUA,EAAQ4J,aAAe5J,EAAQ6J,cAAgB7J,EAAQ8J,iBAAiBC,OACtF,C,mCChHA,IAAIC,EAAmB3E,MAAQA,KAAK2E,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACA9M,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8M,gBAAkBA,EAC1B,MAAMC,EAAeJ,EAAgB,EAAQ,MACvCrM,EAAa,EAAQ,KACrB0M,EAAS,CACXC,QAAS,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,IAAK,EAAGC,KAAM,EAC3DC,KAAM,EAAGC,OAAQ,EAAGC,UAAW,EAAGC,QAAS,GAAIC,SAAU,GAAIC,SAAU,IAE3E,SAASC,EAAgBC,GACrB,OAAOA,EAAMlI,QAAQ,OAAOyG,GAAK,aAAaC,SAASD,KAC3D,CACA,IAAI0B,EAAczN,EAAW0N,aA6E7B,SAASlB,IACLf,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAa+B,gBAAgB7B,IAC7D2B,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aA9EhF,WACI,IAAIE,EACJ,MAAMC,EAAa5M,SAASyC,cAAc,wDAC1C,IAAKmK,EACD,OACJ,MAAMzI,EAAyC,QAAjCwI,EAAKC,EAAW/J,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OACnF,IAAKI,EACD,OACJ,MAAM0I,EAAQ1I,EAAKoE,MAAM,KACzB,GAAIsE,EAAM1B,OAAS,EACf,OACJ,MAAM2B,EAAYD,EAAM,GAClBE,EAAOhC,SAAS8B,EAAM,GAAI,IAC1BG,EAAWvB,EAAOqB,GACxB,IAAKE,GAAYC,MAAMF,GACnB,OACJ,MAAMG,EAAW,IAAIvF,KAAKoF,EAAMC,EAAW,EAAG,GACxCG,EAAQ3B,EAAa4B,QAAQzI,UAAUuI,GACvCG,EAAU,GAAGtO,EAAW8F,eAAesI,EAAMrI,GAAK,MAAMwH,EAAgBa,EAAMnI,GAAGsI,cACvFV,EAAW/J,YAAcwK,EACzBT,EAAWtM,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eAC5DZ,EAAWrD,aAAa,MAAO,OAC/BkE,OAAOC,mBAAqBR,CAChC,CAwDQS,GAvDR,WACI,MAAMC,EAAWH,OAAOC,mBACxB,IAAKE,EACD,OACJ,MAAMC,EAAe7N,SAASyC,cAAc,6DAC5C,IAAKoL,EACD,OACUC,MAAMC,KAAKF,EAAarK,iBAAiB,8BACjDI,SAAQ,CAACqE,EAAI+F,KACf,MAAMC,EAAW,IAAItG,KAAKiG,GAC1BK,EAASC,QAAQN,EAASO,UAAYH,GACtC,MACMI,EAAU9B,EADFd,EAAa4B,QAAQzI,UAAUsJ,GACPlJ,GAAGuI,YACnCe,EAAOpG,EAAGxF,cAAc,QAC1B4L,GACAA,EAAKxL,YAAcuL,EACnBC,EAAK/N,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACtDa,EAAK9E,aAAa,MAAO,SAGzBtB,EAAGpF,YAAcuL,EACjBnG,EAAG3H,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACpDvF,EAAGsB,aAAa,MAAO,OAC3B,IAEesE,EAAarK,iBAAiB,8CACtCI,SAAQ0K,GAAUA,EAAOC,UACxC,CA6BQC,GA5BR,WACI,MAAMC,EAAYzO,SAASyC,cAAc,uFACzC,IAAKgM,EACD,OACJ,MAAMb,EAAWH,OAAOC,mBACxB,IAAKE,EACD,OACWa,EAAUjL,iBAAiB,OACnCI,SAAQ8K,IACX,IAAI/B,EACJ,MAAMxI,EAAoC,QAA5BwI,EAAK+B,EAAM7L,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OAC9E,IAAKI,QAAyBwK,IAAjBlD,EAAOtH,GAChB,OACJ,MAAMxD,EAAOiO,WAAWF,EAAMpO,MAAMK,MAAQ,KACtCkO,EAAgBC,KAAKC,MAAMpO,EAAO,IAClCsN,EAAW,IAAItG,KAAKiG,GAC1BK,EAASC,QAAQN,EAASO,UAAYU,GACtC,MAAM1B,EAAQ3B,EAAa4B,QAAQzI,UAAUsJ,GACvCe,EAAejQ,EAAW8F,eAAesI,EAAMrI,GAAK,GAC1D4J,EAAM7L,YAAcmM,EACpBN,EAAMpO,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACvDkB,EAAMnF,aAAa,MAAO,MAAM,GAExC,CAMQ0F,EAA4B,GAEpC,CAQAzE,OAAOC,QAAQyE,UAAUC,aAAY,CAACC,EAASC,KAC9B,SAATA,GAAmBD,EAAQrQ,EAAW4L,aAAa+B,gBACnDlC,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAa+B,gBAAgB7B,IAC7D2B,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACxElB,GAAiB,GAEzB,IAWJvF,YATA,WACIwE,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAa+B,gBAAgB7B,IAC7D2B,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACpEzM,SAASyC,cAAc,2BACvB8I,IAnBZ,WACI,MAAMtD,EAAKjI,SAASyC,cAAc,yBAClC,IAAKwF,EACD,OACa,IAAIqH,kBAAiB,IAAM/D,MACnCgE,QAAQtH,EAAI,CAAEuH,WAAW,EAAMC,SAAS,EAAMC,eAAe,GAC1E,CAcYC,GACJ,GAER,GACmC,K,mCC3HnC,IAAInJ,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUvI,GAAS,IAAMwI,EAAKL,EAAUM,KAAKzI,GAAS,CAAE,MAAOiD,GAAKqF,EAAOrF,EAAI,CAAE,CAC1F,SAASyF,EAAS1I,GAAS,IAAMwI,EAAKL,EAAiB,MAAEnI,GAAS,CAAE,MAAOiD,GAAKqF,EAAOrF,EAAI,CAAE,CAC7F,SAASuF,EAAKG,GAJlB,IAAe3I,EAIa2I,EAAOC,KAAOP,EAAQM,EAAO3I,QAJ1CA,EAIyD2I,EAAO3I,MAJhDA,aAAiBkI,EAAIlI,EAAQ,IAAIkI,GAAE,SAAUG,GAAWA,EAAQrI,EAAQ,KAIjB6I,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACA5I,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMkR,EAAuB,EAAQ,IAC/BC,EAAiB,EAAQ,IACzBC,EAAkB,EAAQ,KAC1B/Q,EAAa,EAAQ,KAC3B,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,IAAIH,GAAe,EACfmR,GAAuB,EACvBC,GAA6B,EAC7BC,EAAgB,KA4DpB,SAASC,IACL,OAAO1J,EAAUC,UAAM,OAAQ,GAAQ,YACnC,GAAIuJ,EACAnR,QAAQC,IAAI,GAAGC,EAAWC,+CAD9B,CAIAgR,GAA6B,EAC7B,IACInR,QAAQC,IAAI,GAAGC,EAAWC,qCAAsCJ,EAAe,UAAY,aAC3F,MAAMuR,QAAmB,EAAIP,EAAqBnI,mBAAmB7I,GAC/DwR,GAAe,EAAIP,EAAelR,oBAAoBC,GACtDyR,EAAaF,EAAaC,EAC1BE,GAAa,EAAIV,EAAqBtF,iBACxCgG,EAAa,GACb9F,OAAO+F,QAAQC,YAAY,CAAE,CAACzR,EAAW0R,cAAcC,sBAAsB,EAAMJ,eAEvFzR,QAAQC,IAAI,GAAGC,EAAWC,wBAAwBqR,YAAqBF,kBAA2BC,cACtG,CACA,QACIJ,GAA6B,CACjC,CAfA,CAgBJ,GACJ,CAjFAxF,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAagG,cAAe5R,EAAW4L,aAAaiG,yBAAyB9F,IAC7GjM,QAAQC,IAAI,GAAGC,EAAWC,kCAAmC8L,GAC7DlM,IAAiBkM,EAAE/L,EAAW4L,aAAagG,eAC3CZ,IAAyBjF,EAAE/L,EAAW4L,aAAaiG,wBAC/ChS,GACAoH,YAAW,IAAMkK,KAAgB,MACrC,EAAIJ,EAAgBe,aAAad,EAAqB,IAE1DvF,OAAO+F,QAAQO,UAAU3B,aAAY,CAAC4B,EAAKC,EAAQC,IAAiBzK,OAAU,OAAQ,OAAQ,GAAQ,YAClG,GAAIuK,EAAIG,OAASnS,EAAW0R,cAAcU,gBAAkBJ,EAAIlG,KAQ5D,OAPAjM,IAAiBmS,EAAIlG,KAAK9L,EAAW4L,aAAagG,eAClDZ,IAAyBgB,EAAIlG,KAAK9L,EAAW4L,aAAaiG,wBACtDG,EAAIlG,KAAK9L,EAAW4L,aAAa+B,iBACjC,EAAIoD,EAAgBsB,gBAAgBL,EAAIlG,KAAK9L,EAAW4L,aAAa+B,iBACzE,EAAIoD,EAAgBe,aAAad,QAC7BnR,UACMsR,MAkBd,GAfArR,QAAQC,IAAI,GAAGC,EAAWC,8BAA+B+R,QAChCpC,IAArBoC,EAAInS,eACJA,EAAemS,EAAInS,aACnBC,QAAQC,IAAI,GAAGC,EAAWC,kCAAmCJ,SACvDsR,UAEuBvB,IAA7BoC,EAAIhB,uBACJA,EAAuBgB,EAAIhB,qBAC3BlR,QAAQC,IAAI,GAAGC,EAAWC,mCAAoC+Q,IAC9D,EAAID,EAAgBe,aAAad,IAEjCgB,EAAIM,eACJxS,QAAQC,IAAI,GAAGC,EAAWC,uCAAwC+R,EAAIM,eACtE,EAAIvB,EAAgBsB,gBAAgBL,EAAIM,eAExCN,EAAIhS,EAAW0R,cAAca,cAAe,CAC5C,MAAMhB,GAAa,EAAIV,EAAqBtF,iBAG5C,OAFAzL,QAAQC,IAAI,GAAGC,EAAWC,mCAAoCsR,GAC9DW,EAAa,CAAEX,gBACR,CACX,CACA,GAAIS,EAAIhS,EAAW0R,cAAcc,oBAAqB,CAClD1S,QAAQC,IAAI,GAAGC,EAAWC,8BAC1B,MAEMwS,SAFmB,EAAI5B,EAAqB5F,yBACxB,EAAI6F,EAAe1J,+BAE7C,OAAI4K,EAAIU,aACJjH,OAAO+F,QAAQC,YAAY,CAAE,CAACzR,EAAW0R,cAAciB,iBAAiB,EAAMtL,MAAOoL,EAAiBG,WAAW,IACjHlE,OAAOmE,SAASC,UACT,IAEX7L,YAAW,IAAMQ,OAAU,OAAQ,OAAQ,GAAQ,YAC3C5H,UACMsR,KACV1F,OAAO+F,QAAQC,YAAY,CAAE,CAACzR,EAAW0R,cAAciB,iBAAiB,EAAMtL,MAAOoL,GACzF,KAAI,MACG,EACX,CACA,OAAO,CACX,MAyBIxR,SAAS0C,iBAAiB,SAAUf,IAChC,IAAIgL,EAAImF,EAAIC,EAAIC,EAChB,IAAKpT,EACD,OACJ,MAAM2G,EAAS5D,EAAE4D,QACbA,EAAO0M,QAAQlT,EAAWmT,wBAC1B3M,EAAO4M,QAAQpT,EAAWqT,sBAC1B7M,EAAO4M,QAAQpT,EAAWsT,sBACzB9M,EAAO4M,QAAQpT,EAAWuT,+BAA+D,QAA7B3F,EAAKpH,EAAO1C,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG4F,SAAS,kBAAkD,QAA7BT,EAAKvM,EAAO1C,mBAAgC,IAAPiP,OAAgB,EAASA,EAAGS,SAAS,cACtO1T,QAAQC,IAAI,GAAGC,EAAWC,+CAC1BgH,YAAW,IAAMkK,KAAgBnR,EAAWyT,iBAE5CjN,EAAO4M,QAAQpT,EAAW0T,0BAA0D,QAA7BV,EAAKxM,EAAO1C,mBAAgC,IAAPkP,OAAgB,EAASA,EAAGQ,SAAS,YAA4C,QAA7BP,EAAKzM,EAAO1C,mBAAgC,IAAPmP,OAAgB,EAASA,EAAGO,SAAS,iBAC1N1T,QAAQC,IAAI,GAAGC,EAAWC,gDAC1BgH,YAAW,IAAMkK,KAAgB,KACrC,IAEJlQ,SAAS0C,iBAAiB,SAAUf,IAChC,IAAK/C,EACD,OACJ,MAAM2G,EAAS5D,EAAE4D,QACbA,EAAO4M,QAAQpT,EAAW2T,0BAAgD,UAAnBnN,EAAOoN,SAAuBpN,EAAO4M,QAAQpT,EAAW6T,+BAC/G/T,QAAQC,IAAI,GAAGC,EAAWC,wCACtBiR,GACA4C,aAAa5C,GACjBA,EAAgBxC,OAAOzH,YAAW,IAAMkK,KAAgBnR,EAAWyT,gBACvE,IAIa,IAAIlD,kBAAkBwD,KAC9BlU,IAAgB,EAAIgR,EAAqBvF,gCAAiC,EAAIuF,EAAqB1F,yBAAyBnL,EAAWqL,oBAErH0I,EAAUC,MAAKC,KACZ,kBAAlBA,EAAS9B,MAA4B8B,EAASzN,OAAO0N,WAAaC,KAAKC,YAAaH,EAASzN,OAAO1C,iBAElF,cAAlBmQ,EAAS9B,MAAwB8B,EAASzN,kBAAkB6N,cAC3DJ,EAASzN,OAAO4M,QAAQpT,EAAW2T,0BAA4BM,EAASzN,OAAO4M,QAAQ,iBACpFa,EAASzN,OAAO4M,QAAQ,qBAAuBa,EAASzN,OAAO4M,QAAQpT,EAAW6T,kCAK1F/T,QAAQC,IAAI,GAAGC,EAAWC,gDACtBiR,GACA4C,aAAa5C,GACjBA,EAAgBxC,OAAOzH,YAAW,IAAMkK,KAAgBnR,EAAWyT,gBACvE,IAEKjD,QAAQvP,SAASC,KAAM,CAAEuP,WAAW,EAAMC,SAAS,EAAMC,eAAe,IAGjF2D,aAAY,KACR,IAAKzU,EACD,OACJ,MAAM0R,GAAa,EAAIV,EAAqBtF,iBACxCgG,EAAa,GACb9F,OAAO+F,QAAQC,YAAY,CAAE,CAACzR,EAAW0R,cAAcC,sBAAsB,EAAMJ,eAAc,QACrG,GACD,I,2BCnKP/R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6U,eAAiB7U,EAAQmU,2BAA6BnU,EAAQiU,wBAA0BjU,EAAQgU,sBAAwBhU,EAAQ6T,2BAA6B7T,EAAQ4T,oBAAsB5T,EAAQ2T,oBAAsB3T,EAAQyT,sBAAwBzT,EAAQ8U,mBAAqB9U,EAAQ+T,eAAiB/T,EAAQgS,cAAgBhS,EAAQ+U,YAAc/U,EAAQkM,aAAelM,EAAQgV,mBAAqBhV,EAAQ4K,aAAe5K,EAAQ+O,aAAe/O,EAAQgO,aAAehO,EAAQiV,sBAAwBjV,EAAQkV,sBAAwBlV,EAAQmV,oBAAsBnV,EAAQoV,qBAAuBpV,EAAQqV,uBAAyBrV,EAAQsV,sBAAwBtV,EAAQuV,qBAAuBvV,EAAQwV,uBAAyBxV,EAAQyV,oBAAsBzV,EAAQ0V,uBAAyB1V,EAAQ2V,cAAgB3V,EAAQ4V,cAAgB5V,EAAQ6V,cAAgB7V,EAAQY,gBAAkBZ,EAAQgF,kBAAoBhF,EAAQ6G,kBAAoB7G,EAAQ0G,iBAAmB1G,EAAQqC,YAAcrC,EAAQ8V,SAAW9V,EAAQyE,YAAczE,EAAQuC,YAAcvC,EAAQsC,gBAAkBtC,EAAQ0C,WAAa1C,EAAQ4B,SAAW5B,EAAQuJ,qBAAuBvJ,EAAQ2L,kBAAoB3L,EAAQ+V,qBAAuB/V,EAAQoG,eAAiBpG,EAAQgN,OAAShN,EAAQO,gBAAa,EAEhwCP,EAAQO,WAAa,SAErBP,EAAQgN,OAAS,CACbgJ,QAAS,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,IAAK,EAAGC,KAAM,EAC3DC,KAAM,EAAGC,OAAQ,EAAGC,UAAW,EAAGC,QAAS,GAAIC,SAAU,GAAIC,SAAU,GACvEC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,KAAM,EAAGC,IAAK,GAAIC,IAAK,GAAIC,IAAK,IAEpGvX,EAAQoG,eAAiB,CACrB,UAAW,WAAY,QAAS,MAAO,QAAS,SAChD,MAAO,OAAQ,MAAO,KAAM,OAAQ,SAExCpG,EAAQ+V,qBAAuB,kCAE/B/V,EAAQ2L,kBAAoB,IAC5B3L,EAAQuJ,qBAAuB,sDAE/BvJ,EAAQ4B,SAAW,sBACnB5B,EAAQ0C,WAAa,wBACrB1C,EAAQsC,gBAAkB,yBAC1BtC,EAAQuC,YAAc,qBACtBvC,EAAQyE,YAAc,4BACtBzE,EAAQ8V,SAAW,sBACnB9V,EAAQqC,YAAc,gBACtBrC,EAAQ0G,iBAAmB,0BAC3B1G,EAAQ6G,kBAAoB,gEAC5B7G,EAAQgF,kBAAoB,8CAC5BhF,EAAQY,gBAAkB,4BAE1BZ,EAAQ6V,cAAgB,qDACxB7V,EAAQ4V,cAAgB,CACpB,CAAE4B,QAAS,YAAaC,QAAS,WAAYC,QAAS,oBACtD,CAAEF,QAAS,QAASC,QAAS,OAAQC,QAAS,oBAC9C,CAAEF,QAAS,WAAYC,QAAS,QAASC,QAAS,qBAEtD1X,EAAQ2V,cAAgB,wGAKb5J,OAAO+F,QAAQ6F,OAAO,uGAEtB5L,OAAO+F,QAAQ6F,OAAO,6KAKd3X,EAAQ6V,mHAOhB9J,OAAO+F,QAAQ6F,OAAO,gGAEtB5L,OAAO+F,QAAQ6F,OAAO,sKAKd3X,EAAQ6V,oHAMb9J,OAAO+F,QAAQ6F,OAAO,+HAGjB3X,EAAQ6V,4EAIb9J,OAAO+F,QAAQ6F,OAAO,uIAIjB3X,EAAQ6V,gQAU3B7V,EAAQ0V,uBAAyB,kDACjC1V,EAAQyV,oBAAsB,6BAC9BzV,EAAQwV,uBAAyB,gDACjCxV,EAAQuV,qBAAuB,sBAC/BvV,EAAQsV,sBAAwB,yCAChCtV,EAAQqV,uBAAyB,gDACjCrV,EAAQoV,qBAAuB,sBAC/BpV,EAAQmV,oBAAsB,sBAC9BnV,EAAQkV,sBAAwB,uSAGhClV,EAAQiV,sBAAwB,CAC5B,uBACA,qBACA,qBACA,uBACA,qBACA,iBACA,eACA,qBACA,gCACA,gBACA,2BACF2C,KAAK,MACP5X,EAAQgO,aAAe,YACvBhO,EAAQ+O,aAAe,uEAEvB/O,EAAQ4K,aAAe,CACnBC,cAAe,eACfgN,UAAW,aAEf7X,EAAQgV,mBAAqB,mBAE7BhV,EAAQkM,aAAe,CACnBgG,cAAe,eACfC,uBAAwB,uBACxBlE,cAAe,eACf9B,gBAAiB,kBAGrBnM,EAAQ+U,YAAc,CAClB+C,eAAgB,iBAChBC,YAAa,cACbC,aAAc,eACdC,cAAe,gBACfC,wBAAyB,0BACzBC,cAAe,gBACfC,YAAa,cACbC,OAAQ,SACRC,aAAc,gBAGlBtY,EAAQgS,cAAgB,CACpBU,eAAgB,gBAChBO,eAAgB,gBAChBhB,oBAAqB,oBACrBY,aAAc,cACdC,mBAAoB,qBAGxB9S,EAAQ+T,eAAiB,IACzB/T,EAAQ8U,mBAAqB,oBAC7B9U,EAAQyT,sBAAwB,qBAChCzT,EAAQ2T,oBAAsB,gCAC9B3T,EAAQ4T,oBAAsB,4BAC9B5T,EAAQ6T,2BAA6B,kBACrC7T,EAAQgU,sBAAwB,qBAChChU,EAAQiU,wBAA0B,iCAClCjU,EAAQmU,2BAA6B,OAErCnU,EAAQ6U,eAAiB,CACrB0D,MAAO,aACPC,YAAa,aACbC,eAAgB,aAChBC,WAAY,aACZJ,aAAc,wCACdK,YAAa,gB,6BCtKjB7Y,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwF,cAAgBA,EACxBxF,EAAQ8F,eAoBR,SAAwBJ,GACpB,IAAKA,GAAwB,iBAATA,GAAqBF,EAAcE,GACnD,OAAO,KACXA,EAAOA,EAAKJ,OACZ,IACI,IAAIsT,EAAIlT,EAAKmT,MAAM,0CACnB,GAAID,EAAG,CACH,MAAME,EAAMxY,EAAW0M,OAAO4L,EAAE,GAAGG,eACnC,OAAKD,EAEE,IAAI5P,MAAM0P,EAAE,GAAIE,EAAM,GAAIF,EAAE,IADxB,IAEf,CAEA,GADAA,EAAIlT,EAAKmT,MAAM,yCACXD,EAAG,CACH,MAAMtK,EAAOhC,SAASsM,EAAE,GAAI,IACtBI,EAAQ1M,SAASsM,EAAE,GAAI,IACvBK,EAAM3M,SAASsM,EAAE,GAAI,IAC3B,OAAItK,GAAQ,MAAQA,EAAO,OAASxO,OAAOoZ,KAAK5Y,EAAW0M,QAAQsH,MAAK0E,GAAStT,EAAKqT,cAAcjF,SAASkF,EAAMD,mBAG/GC,EAAQ,GAAKA,EAAQ,IAAMC,EAAM,GAAKA,EAAM,IAFrC,KAIJ,IAAI/P,KAAKoF,EAAM0K,EAAQ,EAAGC,EACrC,CAEA,GADAL,EAAIlT,EAAKmT,MAAM,qCACXD,EAAG,CACH,MAAMI,EAAQ1M,SAASsM,EAAE,GAAI,IACvBK,EAAM3M,SAASsM,EAAE,GAAI,IACrBtK,EAAOhC,SAASsM,EAAE,GAAI,IAC5B,OAAItK,GAAQ,MAAQA,EAAO,OAEvB0K,EAAQ,GAAKA,EAAQ,IAAMC,EAAM,GAAKA,EAAM,IADrC,KAGJ,IAAI/P,KAAKoF,EAAM0K,EAAQ,EAAGC,EACrC,CAEA,GADAL,EAAIlT,EAAKmT,MAAM,yCACXD,EAAG,CACH,MAAME,EAAMxY,EAAW0M,OAAO4L,EAAE,GAAGG,eACnC,OAAKD,EAEE,IAAI5P,MAAM0P,EAAE,GAAIE,EAAM,GAAIF,EAAE,IADxB,IAEf,CACA,GAAI,SAASxO,KAAK1E,GACd,OAAO,IAAIwD,KACf,GAAI,aAAakB,KAAK1E,GAAO,CACzB,MAAMyT,EAAY,IAAIjQ,KAEtB,OADAiQ,EAAU1J,QAAQ0J,EAAUzJ,UAAY,GACjCyJ,CACX,CACA,GAAI,YAAY/O,KAAK1E,GAAO,CACxB,MAAM0T,EAAW,IAAIlQ,KAErB,OADAkQ,EAAS3J,QAAQ2J,EAAS1J,UAAY,GAC/B0J,CACX,CACJ,CACA,MAAOhY,GACHhB,QAAQgB,MAAM,sBAAuBsE,EAAMtE,EAC/C,CACA,OAAO,IACX,EA9EApB,EAAQsK,aA+ER,SAAsB+B,GAClB,IAAKA,KAAOA,aAAanD,OAASsF,MAAMnC,EAAEgN,WAEtC,OADAjZ,QAAQgB,MAAM,sCAAuCiL,GAC9C,eAEX,IACI,MAAMrG,EAASC,EAAQC,UAAUmG,GACjC,MAAO,GAAGrG,EAAOO,MAAMP,EAAOK,GAAGwI,WAAWyK,SAAS,EAAG,QAAQtT,EAAOM,GAAGuI,WAAWyK,SAAS,EAAG,MACrG,CACA,MAAOlY,GAEH,OADAhB,QAAQgB,MAAM,yBAA0BA,GACjC,cACX,CACJ,EA3FApB,EAAQkL,mBA4FR,SAA4BqO,GACxB,IACI,MAAMV,EAAQU,EAAeV,MAAMvY,EAAWyV,sBAC9C,IAAK8C,EACD,OAAO,KACX,MAAMtS,EAAK+F,SAASuM,EAAM,GAAI,IACxBxS,EAAKiG,SAASuM,EAAM,GAAI,IACxBvS,EAAKgG,SAASuM,EAAM,GAAI,IAC9B,IAAK5S,EAAQuT,mBAAmBjT,EAAIF,EAAIC,GACpC,OAAO,KACX,MAAMmT,EAAYxT,EAAQyT,YAAYnT,EAAIF,EAAIC,GAC9C,MAAO,GAAGmT,EAAUE,MAAMF,EAAUG,GAAG/K,WAAWyK,SAAS,EAAG,QAAQG,EAAUI,GAAGhL,WAAWyK,SAAS,EAAG,MAC9G,CACA,MAAOlY,GAEH,OADAhB,QAAQgB,MAAM,yCAA0CA,GACjD,IACX,CACJ,EA5GA,MAAMd,EAAa,EAAQ,KACrB2F,EAAU,EAAQ,KACxB,SAAST,EAAcE,GACnB,IAAKA,GAAwB,iBAATA,EAChB,OAAO,EAEX,MAAMoU,GADNpU,EAAOA,EAAKJ,QACgBuT,MAAMvY,EAAWyV,sBAC7C,GAAI+D,EAAgB,CAChB,MAAMxL,EAAOhC,SAASwN,EAAe,GAAI,IACnCd,EAAQ1M,SAASwN,EAAe,GAAI,IACpCb,EAAM3M,SAASwN,EAAe,GAAI,IACxC,GAAIxL,GAAQ,MAAQA,EAAO,MAAQ0K,GAAS,GAAKA,GAAS,IAAMC,GAAO,GAAKA,GAAO,GAC/E,OAAOhT,EAAQuT,mBAAmBlL,EAAM0K,EAAOC,EAEvD,CACA,OAAO3Y,EAAW8F,eAAekO,MAAK0E,GAAStT,EAAKoO,SAASkF,IACjE,C,UCnBAe,EAAO/Z,QACL,CAAEkG,UAwBJ,SAAmByT,EAAIC,EAAIC,GACkB,kBAAvC/Z,OAAOka,UAAUnL,SAASoL,KAAKN,KACjCE,EAAKF,EAAGjK,UACRkK,EAAKD,EAAGO,WAAa,EACrBP,EAAKA,EAAGQ,eAEV,OAAOC,EAAIC,EAAIV,EAAIC,EAAIC,GACzB,EA9BIH,YAAaA,EACbF,mBAyCJ,SAA4BjT,EAAIF,EAAIC,GAClC,OAAQC,IAAO,IAAMA,GAAM,MACnBF,GAAM,GAAKA,GAAM,IACjBC,GAAM,GAAKA,GAAMgU,EAAmB/T,EAAIF,EAClD,EA5CIkU,kBAAmBA,EACnBD,mBAAoBA,EACpBE,OAAQA,EACRC,IAAKA,EACLL,IAAKA,EACLC,IAAKA,EACLK,IAAKA,EACLC,oBAAqBA,EACrBC,YA0RJ,SAAqBrU,EAAIF,EAAIC,GAC3B,IAAIuU,EAAYF,EAAoBpU,EAAIF,EAAIC,GAAIwU,SAE5CC,EAAkC,GAAbF,EAAiB,IAAMA,EAAU,GACtDG,EAAmB,EAAED,EAEzB,MAAO,CACLE,SAAUb,EAAIK,EAAIlU,EAAIF,EAAIC,EAAGyU,IAC7BG,OAAQd,EAAIK,EAAIlU,EAAIF,EAAIC,EAAG0U,IAE/B,GA9RA,IAAIG,EAAU,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAC7D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAkBpD,SAASzB,EAAYnT,EAAIF,EAAIC,GAC3B,OAAOoU,EAAID,EAAIlU,EAAIF,EAAIC,GACzB,CAcA,SAASiU,EAAkBhU,GACzB,OAA0B,IAoB5B,SAAoBA,GAClB,IAEIF,EACA+U,EACAC,EACAC,EACAC,EANAC,EAAKL,EAAOzO,OACZ+O,EAAKN,EAAO,GAOhB,GAAI5U,EAAKkV,GAAMlV,GAAM4U,EAAOK,EAAK,GAC/B,MAAM,IAAIE,MAAM,wBAA0BnV,GAE5C,IAAKgV,EAAI,EAAGA,EAAIC,IAEdJ,GADA/U,EAAK8U,EAAOI,IACAE,IACRlV,EAAKF,IAHSkV,GAAK,EAKvBE,EAAKpV,EAEPiV,EAAI/U,EAAKkV,EAELL,EAAOE,EAAI,IACbA,EAAIA,EAAIF,EAA2B,GAApBO,EAAIP,EAAO,EAAG,MAEjB,KADdC,EAAOzO,EAAIA,EAAI0O,EAAI,EAAG,IAAM,EAAG,MAE7BD,EAAO,GAGT,OAAOA,CACT,CAjDSO,CAAWrV,EACpB,CAKA,SAAS+T,EAAmB/T,EAAIF,GAC9B,OAAIA,GAAM,EAAU,GAChBA,GAAM,IACNkU,EAAkBhU,GADD,GAEd,EACT,CAuDA,SAASiU,EAAOjU,EAAIsV,GAClB,IAIIxV,EACA+U,EACAC,EAEAnF,EACAoF,EACAC,EAVAC,EAAKL,EAAOzO,OACZiN,EAAKpT,EAAK,IACVuV,GAAS,GACTL,EAAKN,EAAO,GAShB,GAAI5U,EAAKkV,GAAMlV,GAAM4U,EAAOK,EAAK,GAC/B,MAAM,IAAIE,MAAM,wBAA0BnV,GAG5C,IAAKgV,EAAI,EAAGA,EAAIC,IAEdJ,GADA/U,EAAK8U,EAAOI,IACAE,IACRlV,EAAKF,IAHSkV,GAAK,EAKvBO,EAAQA,EAAwB,EAAhBH,EAAIP,EAAM,IAAUO,EAAI/O,EAAIwO,EAAM,IAAK,GACvDK,EAAKpV,EAiBP,OAXAyV,EAAQA,EAAqB,EAAbH,EAJhBL,EAAI/U,EAAKkV,EAIc,IAAUE,EAAI/O,EAAI0O,EAAG,IAAM,EAAG,GAC/B,IAAlB1O,EAAIwO,EAAM,KAAaA,EAAOE,GAAM,IACtCQ,GAAS,GAMX5F,EAAQ,GAAK4F,GAHLH,EAAIhC,EAAI,GAAKgC,EAAyB,GAApBA,EAAIhC,EAAI,KAAO,GAAQ,GAAK,KAMlDkC,EAAoB,CAAElC,GAAIA,EAAIzD,MAAOA,IAIrCkF,EAAOE,EAAI,IACbA,EAAIA,EAAIF,EAA2B,GAApBO,EAAIP,EAAO,EAAG,MAEjB,KADdC,EAAOzO,EAAIA,EAAI0O,EAAI,EAAG,IAAM,EAAG,MAE7BD,EAAO,GAGD,CAAEA,KAAMA,EACN1B,GAAIA,EACJzD,MAAOA,GAEnB,CAUA,SAASuE,EAAIlU,EAAIF,EAAIC,GACnB,IAAIyV,EAAIvB,EAAOjU,GAAI,GACnB,OAAO8T,EAAI0B,EAAEpC,GAAI,EAAGoC,EAAE7F,OAAoB,IAAV7P,EAAK,GAAUsV,EAAItV,EAAI,IAAMA,EAAK,GAAKC,EAAK,CAC9E,CAWA,SAAS8T,EAAI4B,GACX,IAMIC,EANAtC,EAAKe,EAAIsB,GAAKrC,GACdpT,EAAKoT,EAAK,IACVoC,EAAIvB,EAAOjU,GAAI,GAQnB,IADA0V,EAAID,EANQ3B,EAAIV,EAAI,EAAGoC,EAAE7F,SAOhB,EAAG,CACV,GAAI+F,GAAK,IAIP,MAAQ,CAAE1V,GAAIA,EACJF,GAHL,EAAIsV,EAAIM,EAAG,IAIN3V,GAHLsG,EAAIqP,EAAG,IAAM,GAOlBA,GAAK,GAET,MAEE1V,GAAM,EACN0V,GAAK,IACU,IAAXF,EAAEV,OACJY,GAAK,GAIT,MAAQ,CAAE1V,GAAIA,EACJF,GAHL,EAAIsV,EAAIM,EAAG,IAIN3V,GAHLsG,EAAIqP,EAAG,IAAM,EAKpB,CAcA,SAAS5B,EAAIV,EAAIC,EAAIC,GACnB,IAAIxN,EAAIsP,EAAqC,MAAhChC,EAAKgC,EAAI/B,EAAK,EAAG,GAAK,QAAgB,GAC7C+B,EAAI,IAAM/O,EAAIgN,EAAK,EAAG,IAAM,EAAG,GAC/BC,EAAK,SAEX,OADAxN,EAAIA,EAAIsP,EAA6C,EAAzCA,EAAIhC,EAAK,OAASgC,EAAI/B,EAAK,EAAG,GAAI,KAAU,GAAK,GAE/D,CAaA,SAASc,EAAIsB,GACX,IAAIlQ,EACAyP,EACA1B,EACAD,EAQJ,OALA9N,GADAA,EAAI,EAAIkQ,EAAM,WACyC,EAA/CL,EAAuC,EAAnCA,EAAI,EAAIK,EAAM,UAAW,QAAa,GAAS,KAC3DT,EAA2B,EAAvBI,EAAI/O,EAAId,EAAG,MAAO,GAAS,IAC/B+N,EAAK8B,EAAI/O,EAAI2O,EAAG,KAAM,GAAK,EAC3B3B,EAAKhN,EAAI+O,EAAIJ,EAAG,KAAM,IAAM,EAEpB,CAAE5B,GADLgC,EAAI7P,EAAG,MAAQ,OAAS6P,EAAI,EAAI/B,EAAI,GAE/BA,GAAIA,EACJC,GAAIA,EAEhB,CAgCA,SAASc,EACPpU,EACAF,EACAC,EACA4V,EACAtD,EACA5O,EACAmS,GAEA,IAAIC,EAAwB1C,EAAYnT,EAAIF,EAAIC,GAEhD,OAAO,IAAI4C,KACTkT,EAAsBzC,GACtByC,EAAsBxC,GAAK,EAC3BwC,EAAsBvC,GACtBqC,GAAK,EACLtD,GAAK,EACL5O,GAAK,EACLmS,GAAM,EAEV,CAMA,SAASR,EAAIU,EAAGC,GACd,SAAUD,EAAIC,EAChB,CAEA,SAAS1P,EAAIyP,EAAGC,GACd,OAAOD,KAAOA,EAAIC,GAAKA,CACzB,C,6BC/VAxc,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuc,iBAuJR,SAA0BzN,GACtB,OAAO,IAAIzG,SAASC,IAChByD,OAAOC,QAAQC,KAAKzF,IAAI,CAAE,CAAClG,EAAW4L,aAAa+B,eAAgBa,IAAc,IAAMxG,KAAU,GAEzG,EA1JAtI,EAAQwc,iBAAmBA,EAC3Bxc,EAAQ2S,eA+JR,SAAwB7D,GACpBf,EAAce,EACV2N,GACAlb,SAASwD,iBAAiBzE,EAAWoV,wBAAwBvQ,SAASqE,IAClE,MAAM7G,EAAU6G,EACZkT,EAAsB/Z,EAAQyB,aAAe,MAC7CzB,EAAQd,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eAC7D,IAGR4N,IACAC,IACAC,IACAC,IACAC,GACJ,EA7KA/c,EAAQoS,YA8KR,SAAqB4K,GACbA,EACAR,IAAmB1T,MAAMgG,IACrBf,EAAce,EACT2N,IACDA,EAAmBlb,SAASG,cAAc,SAC1C+a,EAAiBrY,YAAc9D,EAAWqV,cAC1CpU,SAAS0b,KAAKza,YAAYia,IApE1C,WACI,GAAIS,EACA,OACJA,EAAW,IAAIrM,kBAAkBwD,IAC7B,IAAK,MAAME,KAAYF,EACG,cAAlBE,EAAS9B,KACT8B,EAAS4I,WAAWhY,SAAQiY,IAAcA,EAAK5I,WAAaC,KAAK4I,cAC7DC,EAAeF,EAAK,IAED,kBAAlB7I,EAAS9B,MACd8K,EAAgBhJ,EAASzN,QAGjC0W,IACAb,IACAC,IACAC,IACAC,IACAC,GAAwB,IAE5BG,EAASpM,QAAQvP,SAASC,KAAM,CAAEuP,WAAW,EAAMC,SAAS,EAAMC,eAAe,IACjFqM,EAAe/b,SAASC,MACxBgc,IACAb,IACAC,IACAC,IACAC,IACAC,GACJ,CA0CYU,EAAe,KAIfhB,IACAA,EAAiB3M,SACjB2M,EAAmB,MAEvBlb,SAASwD,iBAAiBzE,EAAWoV,wBAAwBvQ,SAASqE,IAClE,MAAM7G,EAAU6G,EAChB7G,EAAQd,MAAMiN,WAAa,GAC3BnM,EAAQd,MAAM6b,UAAY,GAC1B/a,EAAQd,MAAM8b,UAAY,EAAE,IAEhCpc,SAASwD,iBAAiBzE,EAAW2U,uBAAuB9P,SAASqE,IACjEA,EAAG3H,MAAM+b,eAAe,cAAc,IAE1Crc,SAASwD,iBAAiBzE,EAAW4U,uBAAuB/P,SAASqE,IACjE,MAAM7G,EAAU6G,EAChB7G,EAAQd,MAAM6b,UAAY,GAC1B/a,EAAQd,MAAM8b,UAAY,GAC1Bhb,EAAQd,MAAMiN,WAAa,EAAE,IAEjCvN,SAASwD,iBAAiBzE,EAAWkV,wBAAwBrQ,SAASiC,IAClEA,EAAMvF,MAAM6b,UAAY,GACxBtW,EAAMvF,MAAM8b,UAAY,GACxB,MAAME,EAASzW,EAAMpD,cAAc,iBAC/B6Z,IACAA,EAAOhc,MAAM6b,UAAY,GACzBG,EAAOhc,MAAM8b,UAAY,GAC7B,IAEJpc,SAASwD,iBAAiBzE,EAAWiV,sBAAsBpQ,SAASiC,IAChE,MAAM0W,EAAK1W,EAAMpD,cAAc,cAC/B,GAAI8Z,EAAI,CACJ,MAAMC,EAAQD,EAAG9Z,cAAc,8BAC3B+Z,IACAA,EAAMlc,MAAMmc,YAAc,OAC1BD,EAAMlc,MAAMoc,WAAa,yBACzBF,EAAMlc,MAAMqc,YAAc,GAC1BH,EAAMlc,MAAMsc,aAAe,IAE/BL,EAAGjc,MAAM6b,UAAY,GACrBI,EAAGjc,MAAM8b,UAAY,EACzB,KAEJpc,SAASwD,iBAAiBzE,EAAWgV,uBAAuBnQ,SAASiC,IACjE,MAAMgX,EAAchX,EACpBgX,EAAYvc,MAAM8b,UAAY,GAC9B,MAAMU,EAAgBD,EAAYE,kBAC9BD,GACAA,EAAcxc,MAAM+b,eAAe,iBAAiB,IAE5Drc,SAASwD,iBAAiB,GAAGzE,EAAW+U,2BAA2B/U,EAAW8U,yBAAyB9U,EAAW6U,uBAAuBhQ,SAASiC,IAC9IA,EAAM4D,gBAAgB,MAAM,IA9FhCkS,IACAA,EAASqB,aACTrB,EAAW,MAgGnB,EAhPA,MAAM5c,EAAa,EAAQ,KAC3B,IAAImc,EAAmB,KACnBS,EAAW,KACXnP,EAAczN,EAAW0N,aAI7B,SAAS0O,EAAsBhX,GAE3B,MAD2B,yDACD0E,KAAK1E,EACnC,CACA,SAAS6X,EAAgBH,GACrB,IAAIlP,EAEJ,IAAKwO,EADQU,EAAKhZ,aAAe,IAE7B,OACJ,MAAM4L,EAA0C,QAA7B9B,EAAKkP,EAAKoB,qBAAkC,IAAPtQ,OAAgB,EAASA,EAAGwF,QAAQpT,EAAWoV,wBAClG1F,IAAaA,EAAU0D,QAAQpT,EAAWmV,uBAE/CzF,EAAUnO,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eAC3DiB,EAAUnO,MAAM6b,UAAY,MAC5B1N,EAAUnO,MAAM8b,UAAY,QAChC,CACA,SAASL,EAAemB,GACpB,MAAMC,EAASnd,SAASod,iBAAiBF,EAAMG,WAAWC,UAAW,MACrE,IAAIzB,EACJ,KAAQA,EAAOsB,EAAOI,YAClBvB,EAAgBH,EACxB,CACA,SAAS2B,EAAwB3X,GAC7B,MAAMyW,EAASzW,EAAMpD,cAAc,iBACnC,GAAI6Z,EAAQ,CACR,IAAIpb,EAAUob,EAAOhc,MAAMmd,iBAAiB,4BAA8BnB,EAAOzZ,aAAe,GAChG3B,EAAUA,EAAQmD,QAAQ,QAAS,IAAIN,OACvC,MAAM2Z,EAAiCxc,EA7B9BmD,QAAQ,OAAOyG,GAAK,aAAaC,SAASD,MA8BnDwR,EAAOhc,MAAM+b,eAAe,2BAC5BC,EAAOzZ,YAAc6a,EACrBpB,EAAOhc,MAAM6b,UAAY,MACzBG,EAAOhc,MAAM8b,UAAY,OAC7B,CACJ,CACA,SAASd,IACLtb,SAASwD,iBAAiBzE,EAAWkV,wBAAwBrQ,SAASiC,IAC9DsV,EAAsBtV,EAAMhD,aAAe,MAC3C2a,EAAwB3X,GACxBA,EAAMvF,MAAM6b,UAAY,MACxBtW,EAAMvF,MAAM8b,UAAY,QAC5B,GAER,CACA,SAASb,IACLvb,SAASwD,iBAAiBzE,EAAWiV,sBAAsBpQ,SAASiC,IAChE,GAAIsV,EAAsBtV,EAAMhD,aAAe,IAAK,CAChD,MAAM0Z,EAAK1W,EAAMpD,cAAc,cAC/B,GAAI8Z,EAAI,CACJ,MAAMC,EAAQD,EAAG9Z,cAAc,6BAC/B,GAAI+Z,EAAO,CACP,MAAMmB,EAAWlQ,OAAOmQ,iBAAiBpB,GACnCqB,EAAsBF,EAAShB,YAC/BmB,EAAuBH,EAASf,aACtCJ,EAAMlc,MAAMoc,WAAa,OACzBF,EAAMlc,MAAMmc,YAAc,yBAC1BD,EAAMlc,MAAMqc,YAAcmB,EAC1BtB,EAAMlc,MAAMsc,aAAeiB,CAC/B,CACAtB,EAAGjc,MAAM6b,UAAY,MACrBI,EAAGjc,MAAM8b,UAAY,OACzB,CACJ,IAER,CACA,SAASZ,IACLxb,SAASwD,iBAAiBzE,EAAWgV,uBAAuBnQ,SAASiC,IACjE,GAAIsV,EAAsBtV,EAAMhD,aAAe,IAAK,CAChD,MAAMga,EAAchX,EACpBgX,EAAYvc,MAAM8b,UAAY,QAC9B,MAAMU,EAAgBD,EAAYE,kBAC9BD,GACAA,EAAcxc,MAAMyd,YAAY,iBAAkB,cAAe,YACzE,IAER,CACA,SAAS9B,IACLjc,SAASwD,iBAAiBzE,EAAW+U,wBAAwBlQ,SAASiC,IAClEA,EAAM0D,aAAa,MAAO,MAAM,IAEpCvJ,SAASwD,iBAAiBzE,EAAW8U,sBAAsBjQ,SAASiC,IAC5DiI,MAAMC,KAAKlI,EAAMrC,iBAAiB,MAAMuP,MAAK9K,GAAMkT,EAAsBlT,EAAGpF,aAAe,OAC3FgD,EAAM0D,aAAa,MAAO,MAC9B,IAEJvJ,SAASwD,iBAAiBzE,EAAW6U,qBAAqBhQ,SAASiC,IAC3DiI,MAAMC,KAAKlI,EAAMrC,iBAAiB,MAAMuP,MAAK9K,GAAMkT,EAAsBlT,EAAGpF,aAAe,OAC3FgD,EAAM0D,aAAa,MAAO,MAC9B,GAER,CACA,SAAS8R,IACLrb,SAASwD,iBAAiBzE,EAAW4U,uBAAuB/P,SAASqE,IACjE,GAAIkT,EAAsBlT,EAAGpF,aAAe,IAAK,CAC7C,MAAMzB,EAAU6G,EAChB7G,EAAQd,MAAM6b,UAAY,MAC1B/a,EAAQd,MAAM8b,UAAY,QAC1Bhb,EAAQd,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,cAC7D,IAER,CACA,SAAS4N,IACLpb,SAASwD,iBAAiBzE,EAAW2U,uBAAuB9P,SAASqE,IACjEA,EAAG3H,MAAMyd,YAAY,cAAe,GAAGvR,MAAgBzN,EAAWyO,eAAgB,YAAY,GAEtG,CAyCA,SAASyN,IACL,OAAO,IAAInU,SAASC,IAChByD,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAa+B,gBAAiBrF,GAAWN,EAAQM,EAAOtI,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,eAAc,GAEvK,C,mCCjKA,IAAIrB,EAAmB3E,MAAQA,KAAK2E,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACA9M,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuf,oBAAsBA,EAC9B,MAAMxS,EAAeJ,EAAgB,EAAQ,MACvCrM,EAAa,EAAQ,KACrB0M,EAAS,CACXC,QAAS,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,IAAK,EAAGC,KAAM,EAC3DC,KAAM,EAAGC,OAAQ,EAAGC,UAAW,EAAGC,QAAS,GAAIC,SAAU,GAAIC,SAAU,GACvE4R,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,EAAGC,IAAK,GAAIC,IAAK,GAAIC,IAAK,IAErFC,EAAkB,CACpBC,IAAK,SAAUC,IAAK,SAAUC,IAAK,UACnCC,IAAK,WAAYC,IAAK,WAAYC,IAAK,OAAQC,IAAK,QAExD,SAAS7S,EAAgBC,GACrB,OAAOA,EAAMlI,QAAQ,OAAOyG,GAAK,cAAcA,IACnD,CACA,IAAI0B,EAAczN,EAAW0N,aAC7B,SAAS2S,IACL,OAAOpf,SAASyC,cAAc,yEAClC,CAqBA,SAAS4c,IACcrf,SAASwD,iBAAiB,sCAClCI,SAAQqE,IACf,IAAI0E,EACJ,MAAM2S,EAASrX,EACTsX,EAAyC,QAA7B5S,EAAK2S,EAAOzc,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OAC/Ewb,GAAYA,KAAYX,IACxBU,EAAOzc,YAAc+b,EAAgBW,GACrCD,EAAOhf,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACxD8R,EAAOhf,MAAM6b,UAAY,MAC7B,GAER,CAmCA,SAAS6B,KAnET,WACI,MAAMwB,EAAWJ,IACjB,IAAKI,EACD,OAECA,EAASha,aAAa,yBACvBga,EAASjW,aAAa,uBAAwBiW,EAAS3c,aAAe,IAE1E,MACMgK,GADO2S,EAASha,aAAa,yBAA2B,IAC3C+C,MAAM,OACzB,GAAIsE,EAAM1B,OAAS,EACf,OACJ,MAAM2B,EAAYD,EAAM,GAAIE,EAAOhC,SAAS8B,EAAM,IAAKG,EAAWvB,EAAOqB,GACzE,IAAKE,GAAYC,MAAMF,GACnB,OACJ,MAAMG,EAAW,IAAIvF,KAAKoF,EAAMC,EAAW,EAAG,GAAIG,EAAQ3B,EAAa4B,QAAQzI,UAAUuI,GAAW8B,EAAejQ,EAAW8F,eAAesI,EAAMrI,GAAK,GAAI2a,EAAcnT,EAAgBa,EAAMnI,GAAGsI,YACnMkS,EAAS3c,YAAc,GAAGmM,KAAgByQ,IAC1CD,EAASjW,aAAa,MAAO,OAC7BiW,EAASlf,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,cAC9D,CAiDIkS,GACAL,IApCJ,WACI,MAAMM,EAAS3f,SAASwD,iBAAiB,6BACnCgc,EAAWJ,IACjB,IAAKI,EACD,OACJ,MACM3S,GADO2S,EAASha,aAAa,yBAA2B,IAC3C+C,MAAM,OACzB,GAAIsE,EAAM1B,OAAS,EACf,OACJ,MAAMyU,EAAkB/S,EAAM,GAAIgT,EAAa9U,SAAS8B,EAAM,IAAKiT,EAAiBrU,EAAOmU,GAC3F,IAAKE,GAAkB7S,MAAM4S,GACzB,OACJ,IAAIE,EAAc,IAAIpY,KAAKkY,EAAYC,EAAiB,EAAG,GAC3DH,EAAO/b,SAAQ0b,IACX,IAAI3S,EACJ,IAAIxI,GAAsC,QAA7BwI,EAAK2S,EAAOzc,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,SAAW,GACzF,MAAMic,EAAa7b,EAAKmT,MAAM,kDAC9B,GAAI0I,EAAY,CACZ,MAAMC,EAAYD,EAAW,GAAIE,EAAW/b,EAAKmT,MAAM,OACvD,GAAI4I,EAAU,CACV,MAAMC,EAASpV,SAASmV,EAAS,IAAKE,EAAW3U,EAAOwU,GACxD,IAAII,EAAUN,EAAYnH,cACtBwH,EAAYL,EAAYpH,WAAa,GACrC0H,IACJN,EAAc,IAAIpY,KAAK0Y,EAASD,EAAW,EAAGD,EAClD,CACJ,CACA,MAAMhT,EAAQ3B,EAAa4B,QAAQzI,UAAUob,GAC7CT,EAAOzc,YAAcyJ,EAAgBa,EAAMpI,GAAGuI,YAC9CgS,EAAOhf,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACxD8R,EAAOhf,MAAM6b,UAAY,MACzB4D,EAAY7R,QAAQ6R,EAAY5R,UAAY,EAAE,GAEtD,CAIImS,EACJ,CACA,SAASpE,EAAcqE,EAAUC,GAC7B,MAAM/R,EAAYzO,SAASyC,cAAc8d,GACzC,IAAK9R,EACD,OACa,IAAIa,iBAAiBkR,GAC7BjR,QAAQd,EAAW,CAAEe,WAAW,EAAMC,SAAS,EAAMC,eAAe,GACjF,CACAlF,OAAOC,QAAQyE,UAAUC,aAAY,CAACC,EAASC,KAC9B,SAATA,IAAoBD,EAAQrQ,EAAW4L,aAAagG,gBAAkBvB,EAAQrQ,EAAW4L,aAAa+B,iBACtGlC,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAagG,cAAe5R,EAAW4L,aAAa+B,gBAAgB7B,IACpG2B,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACpE5B,EAAK9L,EAAW4L,aAAagG,gBAC7BqN,GAAqB,GAEjC,IAEJxT,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAagG,cAAe5R,EAAW4L,aAAa+B,gBAAgB7B,IAEpG,GADA2B,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACpE5B,EAAK9L,EAAW4L,aAAagG,eAAgB,CAC7CqN,IACA9B,EAAc,wBAAyB8B,GACvC9B,EAAc,+BAAgCmD,GAC9C,IAAIoB,EAAQ,KACZhT,OAAO/K,iBAAiB,UAAU,KAC1B+d,GACA5N,aAAa4N,GACjBA,EAAQhT,OAAOzH,YAAW,IAAMgY,KAAuB,IAAI,GAEnE,I,mCC3HJ,IAAI5S,EAAmB3E,MAAQA,KAAK2E,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACA9M,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiiB,gBAAkBA,EAC1B,MAAMlV,EAAeJ,EAAgB,EAAQ,MACvCrM,EAAa,EAAQ,KACrB0M,EAAS,CACXC,QAAS,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,IAAK,EAAGC,KAAM,EAC3DC,KAAM,EAAGC,OAAQ,EAAGC,UAAW,EAAGC,QAAS,GAAIC,SAAU,GAAIC,SAAU,IAErEuS,EAAkB,CACpBO,IAAK,OACLN,IAAK,SACLC,IAAK,SACLC,IAAK,UACLC,IAAK,WACLC,IAAK,WACLC,IAAK,QAET,SAAS5S,EAAgBC,GACrB,OAAOA,EAAMlI,QAAQ,OAAOyG,GAAK,aAAaC,SAASD,KAC3D,CACA,IAAI0B,EAAczN,EAAW0N,aAE7B,SAASkU,IACL,IAAIhU,EACJ,MAAMiU,EAAgB5gB,SAASyC,cAAc,wBACvCoe,EAAc7gB,SAASyC,cAAc,uBAC3C,IAAKme,IAAkBC,EACnB,OACJ,MAAM1c,EAA4C,QAApCwI,EAAKiU,EAAc/d,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OACjFI,IAEL0c,EAAYhe,YAAcsB,EAC1B0c,EAAYtX,aAAa,MAAO,OAChCsX,EAAYvgB,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACjE,CA4CA,SAASsT,IACLH,IA3CmB3gB,SAASwD,iBAAiB,oBAClCI,SAAQ6K,IACf,MAAMsS,EAAQtS,EAAUjJ,aAAa,kBACrC,IAAKub,EACD,OACJ,MAAMnT,EAAW,IAAIjG,KAAKoD,SAASgW,IAChBtS,EAAUjL,iBAAiB,gBACnCI,SAAQ,CAACod,EAAKhT,KACrB,MAAMC,EAAW,IAAItG,KAAKiG,GAC1BK,EAASC,QAAQD,EAASE,UAAYH,GACtC,MAAMb,EAAQ3B,EAAa4B,QAAQzI,UAAUsJ,GACvCG,EAAU9B,EAAgBa,EAAMpI,GAAGuI,YAEzC,GAAiB,IAAbH,EAAMpI,GAAU,CAChB,MAAMiK,EAAejQ,EAAW8F,eAAesI,EAAMrI,GAAK,GACtCwH,EAAgBa,EAAMnI,GAAGsI,YAC7C,IAAI2T,EAASD,EAAIve,cAAc,UAC1Bwe,IACDA,EAASjhB,SAASG,cAAc,UAChC6gB,EAAIE,aAAaD,EAAQD,EAAIG,aAEjCF,EAAOpe,YAAc,IAAImM,KACzBiS,EAAO3gB,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACxDyT,EAAO3gB,MAAM6b,UAAY,KAC7B,KACK,CAED,MAAM8E,EAASD,EAAIve,cAAc,UAC7Bwe,IACAA,EAAOpe,YAAc,GAE7B,CAEA,MAAMwL,EAAO2S,EAAIve,cAAc,QAC3B4L,IACAA,EAAKxL,YAAcuL,EACnBC,EAAK/N,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACtDa,EAAK/N,MAAM6b,UAAY,MAC3B,GACF,GAMV,CA8CA,SAASiF,KA5CT,WACI,IAAIzU,EACJgU,IACA,MAAMnB,EAAWxf,SAASyC,cAAc,wBACxC,IAAK+c,EACD,OACJ,MAAMrb,EAAuC,QAA/BwI,EAAK6S,EAAS3c,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OACjF,IAAKI,EACD,OACJ,MAAM0I,EAAQ1I,EAAKoE,MAAM,OACzB,GAAIsE,EAAM1B,OAAS,EACf,OACJ,MAAM2B,EAAYD,EAAM,GAClBE,EAAOhC,SAAS8B,EAAM,IACtBG,EAAWvB,EAAOqB,GACxB,IAAKE,GAAYC,MAAMF,GACnB,OACJ,MAAMG,EAAW,IAAIvF,KAAKoF,EAAMC,EAAW,EAAG,GACxCG,EAAQ3B,EAAa4B,QAAQzI,UAAUuI,GACvC8B,EAAejQ,EAAW8F,eAAesI,EAAMrI,GAAK,GACpD2a,EAAcnT,EAAgBa,EAAMnI,GAAGsI,YAC7CkS,EAAS3c,YAAc,GAAGmM,KAAgByQ,IAC1CD,EAASjW,aAAa,MAAO,OAC7BiW,EAASlf,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,cAC9D,CAqBI6T,GAnBerhB,SAASwD,iBAAiB,sBAClCI,SAAQ0d,IACX,MAAMC,EAASD,EAAG9b,aAAa,YAC/B,IAAK+b,EACD,OACJ,MAAMC,EAAU,IAAI7Z,KAAK4Z,GACnBpU,EAAQ3B,EAAa4B,QAAQzI,UAAU6c,GACvCR,EAAMM,EAAG7e,cAAc,UAC7B,IAAKue,EACD,OACJ,MAAMS,EAAST,EAAIve,cAAc,yBAC5Bgf,IAELA,EAAO5e,YAAcyJ,EAAgBa,EAAMpI,GAAGuI,YAC9CmU,EAAOnhB,MAAM6b,UAAY,MACzBsF,EAAOnhB,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eAAc,GAM9E,CACA,SAASkU,IACc1hB,SAASwD,iBAAiB,oCAClCI,SAAQqE,IACf,IAAI0E,EACJ,MAAM4S,EAAqC,QAAzB5S,EAAK1E,EAAGpF,mBAAgC,IAAP8J,OAAgB,EAASA,EAAG5I,OAC3Ewb,GAAYX,EAAgBW,KAC5BtX,EAAGpF,YAAc+b,EAAgBW,GACjCtX,EAAGsB,aAAa,MAAO,OACvBtB,EAAG3H,MAAMiN,WAAa,GAAGf,MAAgBzN,EAAWyO,eACxD,GAER,CACA,SAASkT,IACLI,IACAM,IACAM,GACJ,CACA,SAASxF,EAAcqE,EAAUC,GAC7B,MAAM/R,EAAYzO,SAASyC,cAAc8d,GACzC,IAAK9R,EACD,OACa,IAAIa,kBAAiB,IAAMkR,MACnCjR,QAAQd,EAAW,CAAEe,WAAW,EAAMC,SAAS,EAAMC,eAAe,GACjF,CAEAlF,OAAOC,QAAQyE,UAAUC,aAAY,CAACC,EAASC,KAC9B,SAATA,IAAoBD,EAAQrQ,EAAW4L,aAAagG,gBAAkBvB,EAAQrQ,EAAW4L,aAAa+B,iBACtGlC,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAagG,cAAe5R,EAAW4L,aAAa+B,gBAAgB7B,IACpG,MAAMjM,EAAeiM,EAAK9L,EAAW4L,aAAagG,eAClDnE,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACpE7N,GACA8hB,GAAiB,GAE7B,IAGJlW,OAAOC,QAAQC,KAAKhF,IAAI,CAAC3G,EAAW4L,aAAagG,cAAe5R,EAAW4L,aAAa+B,gBAAgB7B,IACpG,MAAMjM,EAAeiM,EAAK9L,EAAW4L,aAAagG,eAElD,GADAnE,EAAc3B,EAAK9L,EAAW4L,aAAa+B,gBAAkB3N,EAAW0N,aACpE7N,EAAc,CACd8hB,IACAxE,EAAc,sBAAuB4E,GACrC5E,EAAc,yBAAyB,KAAQkF,IAAwBM,GAAiB,IACxF,IAAIjB,EAAQ,KACZhT,OAAO/K,iBAAiB,UAAU,KAC1B+d,GACA5N,aAAa4N,GACjBA,EAAQhT,OAAOzH,YAAW,IAAM0a,KAAmB,IAAI,GAE/D,I,GCvLAiB,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlT,IAAjBmT,EACH,OAAOA,EAAarjB,QAGrB,IAAI+Z,EAASmJ,EAAyBE,GAAY,CAGjDpjB,QAAS,CAAC,GAOX,OAHAsjB,EAAoBF,GAAUnJ,KAAKF,EAAO/Z,QAAS+Z,EAAQA,EAAO/Z,QAASmjB,GAGpEpJ,EAAO/Z,OACf,ECnB0BmjB,CAAoB,I","sources":["webpack://notion-persian-tools/./src/convertNotif.ts","webpack://notion-persian-tools/./src/tableDateConverter.ts","webpack://notion-persian-tools/./src/convertTimeline.ts","webpack://notion-persian-tools/./src/content/content.ts","webpack://notion-persian-tools/./src/constant.ts","webpack://notion-persian-tools/./src/dateUtils.ts","webpack://notion-persian-tools/./node_modules/jalaali-js/index.js","webpack://notion-persian-tools/./src/fontInjection.ts","webpack://notion-persian-tools/./src/convertPageCalendar.ts","webpack://notion-persian-tools/./src/convertCalendar.ts","webpack://notion-persian-tools/webpack/bootstrap","webpack://notion-persian-tools/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleDateMentions = handleDateMentions;\nexports.clearDateMentionConversions = clearDateMentionConversions;\nconst jalaali = require('jalaali-js');\nconst dateUtils_1 = require(\"./dateUtils\");\nconst constant_1 = require(\"./constant\");\nlet floatingPanel = null;\nlet showButton = null;\nconst convertedDates = new Map();\nlet isPanelHidden = false;\nlet panelPosition = { top: '', left: '', right: '20px', bottom: '20px' };\nfunction handleDateMentions(persianInput) {\n    console.log(`${constant_1.LOG_PREFIX} Handling date mentions, persianInput =`, persianInput);\n    let convertedMentionCount = 0;\n    try {\n        if (persianInput) {\n            loadPanelState();\n            createFloatingPanel();\n            const mentions = document.querySelectorAll(constant_1.SELECTOR_MENTIONS);\n            convertedDates.clear();\n            mentions.forEach(reminder => {\n                const currentText = reminder.textContent || \"\";\n                const trimmedText = currentText.trim();\n                if (!trimmedText || (0, dateUtils_1.isPersianDate)(trimmedText))\n                    return;\n                const dateInfo = extractDateFromMention(trimmedText);\n                if (dateInfo) {\n                    const { date, display } = dateInfo;\n                    const jalali = jalaali.toJalaali(date);\n                    const persianDate = `${constant_1.PERSIAN_MONTHS[jalali.jm - 1]} ${jalali.jd}، ${jalali.jy}`;\n                    convertedDates.set(display, { persianDate, element: reminder });\n                    convertedMentionCount++;\n                    console.log(`${constant_1.LOG_PREFIX} Converted mention`, display, \"to\", persianDate);\n                }\n            });\n            updatePanelContent();\n            if (isPanelHidden)\n                hidePanel();\n            else\n                showPanel();\n        }\n        else {\n            removeFloatingPanel();\n            convertedDates.clear();\n        }\n        return convertedMentionCount;\n    }\n    catch (error) {\n        console.error(\"Error handling date mentions:\", error);\n        return convertedMentionCount;\n    }\n}\nfunction createFloatingPanel() {\n    if (floatingPanel && document.body.contains(floatingPanel))\n        return;\n    floatingPanel = document.createElement('div');\n    floatingPanel.id = constant_1.PANEL_ID;\n    floatingPanel.style.cssText = `\n    position: fixed;\n    ${panelPosition.bottom ? 'bottom: ' + panelPosition.bottom + ';' : ''}\n    ${panelPosition.right ? 'right: ' + panelPosition.right + ';' : ''}\n    ${panelPosition.top ? 'top: ' + panelPosition.top + ';' : ''}\n    ${panelPosition.left ? 'left: ' + panelPosition.left + ';' : ''}\n    width: 280px;\n    max-height: 400px;\n    background: #ffffff;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, sans-serif;\n    z-index: 9999;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    transition: opacity 0.2s ease, transform 0.2s ease;\n  `;\n    const header = document.createElement('div');\n    header.style.cssText = `\n    padding: 12px 16px;\n    border-bottom: 1px solid #f0f0f0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: move;\n    background: #f7f6f3;\n  `;\n    header.innerHTML = `\n    <div style=\"font-weight: 600; font-size: 14px;\">${constant_1.PANEL_TITLE}</div>\n    <div style=\"display: flex; gap: 8px;\">\n      <button id=\"${constant_1.MINIMIZE_BTN_ID}\" style=\"\n        background: none;\n        border: none;\n        cursor: pointer;\n        font-size: 16px;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      \">−</button>\n      <button id=\"${constant_1.HIDE_BTN_ID}\" style=\"\n        background: none;\n        border: none;\n        cursor: pointer;\n        font-size: 16px;\n        padding: 0;\n        width: 24px;\n        height: 24px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      \">×</button>\n    </div>\n  `;\n    floatingPanel.appendChild(header);\n    const content = document.createElement('div');\n    content.id = constant_1.CONTENT_ID;\n    content.style.cssText = `\n    padding: 16px;\n    overflow-y: auto;\n    max-height: 340px;\n    display: block;\n  `;\n    floatingPanel.appendChild(content);\n    document.body.appendChild(floatingPanel);\n    makeDraggable(floatingPanel, header);\n    const MinimizeBtn = floatingPanel.querySelector(`#${constant_1.MINIMIZE_BTN_ID}`);\n    if (MinimizeBtn) {\n        MinimizeBtn.addEventListener('click', () => {\n            const contentArea = floatingPanel === null || floatingPanel === void 0 ? void 0 : floatingPanel.querySelector(`#${constant_1.CONTENT_ID}`);\n            if (contentArea.style.display === 'none') {\n                contentArea.style.display = 'block';\n                MinimizeBtn.textContent = '−';\n            }\n            else {\n                contentArea.style.display = 'none';\n                MinimizeBtn.textContent = '+';\n            }\n        });\n    }\n    const hideBtn = floatingPanel.querySelector(`#${constant_1.HIDE_BTN_ID}`);\n    if (hideBtn)\n        hideBtn.addEventListener('click', () => { hidePanel(); savePanelState(); });\n    createShowButton();\n}\nfunction createShowButton() {\n    if (showButton && document.body.contains(showButton))\n        document.body.removeChild(showButton);\n    showButton = document.createElement('div');\n    showButton.id = constant_1.SHOW_BTN_ID;\n    showButton.style.cssText = `\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n    width: 36px;\n    height: 36px;\n    background: #ffffff;\n    border-radius: 18px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n    display: none;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    z-index: 9999;\n    font-size: 18px;\n    color: #333;\n  `;\n    showButton.innerHTML = `<span style=\"font-weight: bold;\">🗓️</span>`;\n    showButton.title = constant_1.PANEL_TITLE;\n    showButton.addEventListener('click', () => { showPanel(); savePanelState(); });\n    document.body.appendChild(showButton);\n}\nfunction hidePanel() {\n    if (!floatingPanel || !showButton)\n        return;\n    if (floatingPanel.style.top)\n        panelPosition.top = floatingPanel.style.top;\n    if (floatingPanel.style.left)\n        panelPosition.left = floatingPanel.style.left;\n    if (floatingPanel.style.right)\n        panelPosition.right = floatingPanel.style.right;\n    if (floatingPanel.style.bottom)\n        panelPosition.bottom = floatingPanel.style.bottom;\n    floatingPanel.style.display = 'none';\n    showButton.style.display = 'flex';\n    isPanelHidden = true;\n}\nfunction showPanel() {\n    if (!floatingPanel || !showButton)\n        return;\n    floatingPanel.style.display = 'flex';\n    showButton.style.display = 'none';\n    isPanelHidden = false;\n}\nfunction savePanelState() {\n    try {\n        const state = { hidden: isPanelHidden, position: panelPosition };\n        localStorage.setItem(constant_1.PANEL_STATE_KEY, JSON.stringify(state));\n    }\n    catch (error) {\n        console.error(\"Error saving panel state:\", error);\n    }\n}\nfunction loadPanelState() {\n    try {\n        const savedState = localStorage.getItem(constant_1.PANEL_STATE_KEY);\n        if (savedState) {\n            const state = JSON.parse(savedState);\n            isPanelHidden = state.hidden;\n            if (state.position)\n                panelPosition = state.position;\n        }\n    }\n    catch (error) {\n        console.error(\"Error loading panel state:\", error);\n    }\n}\nfunction updatePanelContent() {\n    if (!floatingPanel)\n        return;\n    const content = floatingPanel.querySelector(`#${constant_1.CONTENT_ID}`);\n    if (!content)\n        return;\n    if (convertedDates.size === 0) {\n        content.innerHTML = `\n      <div style=\"text-align: center; color: #888; padding: 8px 0;\">\n        ${constant_1.NO_DATES_MESSAGE}\n      </div>\n    `;\n        return;\n    }\n    let html = '';\n    convertedDates.forEach(({ persianDate, element }, gregorianDate) => {\n        html += `\n      <div style=\"margin-bottom: 12px; padding-bottom: 12px; border-bottom: 1px solid #f0f0f0;\">\n        <div style=\"margin-bottom: 4px; direction: rtl; text-align: right;\">\n          <span style=\"font-weight: 600; cursor: pointer;\" data-date=\"${gregorianDate}\">${persianDate}</span>\n        </div>\n        <div style=\"font-size: 12px; color: #888;\">\n          ${gregorianDate}\n        </div>\n      </div>\n    `;\n    });\n    html += `\n    <div style=\"font-size: 12px; color: #888; margin-top: 8px; text-align: center;\">\n      ${constant_1.CLICK_INSTRUCTION}\n    </div>\n  `;\n    content.innerHTML = html;\n    const dateElements = content.querySelectorAll('span[data-date]');\n    dateElements.forEach(element => {\n        element.addEventListener('click', (e) => {\n            const target = e.target;\n            const gregorianDate = target.getAttribute('data-date');\n            if (!gregorianDate)\n                return;\n            const conversion = convertedDates.get(gregorianDate);\n            if (!conversion)\n                return;\n            conversion.element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            const originalElement = conversion.element;\n            originalElement.style.backgroundColor = '#fff3cd';\n            setTimeout(() => { originalElement.style.backgroundColor = ''; }, 2000);\n        });\n    });\n}\nfunction showCopyToast(message) {\n    const existingToast = document.getElementById(constant_1.TOAST_ID);\n    if (existingToast)\n        document.body.removeChild(existingToast);\n    const toast = document.createElement('div');\n    toast.id = constant_1.TOAST_ID;\n    toast.style.cssText = `\n    position: fixed;\n    bottom: 60px;\n    right: 20px;\n    background: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 8px 16px;\n    border-radius: 4px;\n    font-size: 14px;\n    z-index: 10000;\n  `;\n    toast.textContent = message;\n    document.body.appendChild(toast);\n    setTimeout(() => { if (document.body.contains(toast))\n        document.body.removeChild(toast); }, 2000);\n}\nfunction removeFloatingPanel() {\n    if (floatingPanel && document.body.contains(floatingPanel)) {\n        document.body.removeChild(floatingPanel);\n        floatingPanel = null;\n    }\n    if (showButton && document.body.contains(showButton)) {\n        document.body.removeChild(showButton);\n        showButton = null;\n    }\n}\nfunction makeDraggable(element, handle) {\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n    handle.onmousedown = dragMouseDown;\n    function dragMouseDown(e) {\n        e.preventDefault();\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        document.onmouseup = closeDragElement;\n        document.onmousemove = elementDrag;\n    }\n    function elementDrag(e) {\n        e.preventDefault();\n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientY;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        element.style.top = (element.offsetTop - pos2) + \"px\";\n        element.style.left = (element.offsetLeft - pos1) + \"px\";\n        element.style.right = 'auto';\n        element.style.bottom = 'auto';\n        panelPosition = { top: element.style.top, left: element.style.left, right: '', bottom: '' };\n    }\n    function closeDragElement() {\n        document.onmouseup = null;\n        document.onmousemove = null;\n        savePanelState();\n    }\n}\nfunction extractDateFromMention(text) {\n    try {\n        const cleaned = text.replace(/\\s+/g, ' ').trim();\n        const date = (0, dateUtils_1.parseGregorian)(cleaned);\n        if (date)\n            return { date, display: cleaned };\n        return null;\n    }\n    catch (error) {\n        console.error(\"Error extracting date from mention:\", error);\n        return null;\n    }\n}\nfunction clearDateMentionConversions() {\n    console.log(`${constant_1.LOG_PREFIX} Clearing date mention conversions`);\n    const count = convertedDates.size;\n    convertedDates.clear();\n    removeFloatingPanel();\n    return count;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertTableDates = convertTableDates;\nexports.resetAllConversions = resetAllConversions;\nexports.wasDateConversionRecent = wasDateConversionRecent;\nexports.isDateConversionInProgress = isDateConversionInProgress;\nexports.getErrorCount = getErrorCount;\nconst dateUtils_1 = require(\"./dateUtils\");\nconst constant_1 = require(\"./constant\");\nconst jalaali = require('jalaali-js');\nlet dateConversionErrorCount = 0;\nlet isProcessingDateChanges = false;\nlet lastDateConversionTime = 0;\nfunction formatJalaliVerbose(date) {\n    const j = jalaali.toJalaali(date);\n    return `${constant_1.PERSIAN_MONTHS[j.jm - 1]} ${j.jd}، ${j.jy}`;\n}\nfunction toPersianDigits(input) {\n    return input.replace(/\\d/g, d => \"۰۱۲۳۴۵۶۷۸۹\"[parseInt(d)]);\n}\nfunction applyPersianNumbersIfEnabled(text) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            chrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_NUMBERS], (data) => {\n                resolve(data[constant_1.STORAGE_KEYS.PERSIAN_NUMBERS] ? toPersianDigits(text) : text);\n            });\n        });\n    });\n}\nfunction convertTableDates(persianInput) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const startTime = Date.now();\n        console.log(`${constant_1.LOG_PREFIX} Starting table date conversion, persianInput =`, persianInput);\n        isProcessingDateChanges = true;\n        let convertedDateCount = 0;\n        try {\n            const elements = document.querySelectorAll(constant_1.SELECTOR_TABLE_DATES);\n            for (const el of elements) {\n                if (!isElementVisible(el))\n                    continue;\n                const currentText = el.innerText.trim();\n                if (!currentText)\n                    continue;\n                const [startDateText, endDateText] = currentText.split('→').map(s => s.trim());\n                if (persianInput) {\n                    if ((0, dateUtils_1.isPersianDate)(startDateText))\n                        continue;\n                    const startDate = (0, dateUtils_1.parseGregorian)(startDateText);\n                    const endDate = endDateText ? (0, dateUtils_1.parseGregorian)(endDateText) : null;\n                    if (startDate) {\n                        const jalaliStart = /[a-zA-Z]/.test(startDateText) ? formatJalaliVerbose(startDate) : (0, dateUtils_1.formatJalali)(startDate);\n                        const jalaliEnd = endDate ? (/[a-zA-Z]/.test(endDateText) ? formatJalaliVerbose(endDate) : (0, dateUtils_1.formatJalali)(endDate)) : null;\n                        if (jalaliStart === \"Invalid Date\" || (endDate && jalaliEnd === \"Invalid Date\"))\n                            continue;\n                        const jalaliRange = jalaliEnd ? `${jalaliStart} → ${jalaliEnd}` : jalaliStart;\n                        const finalText = yield applyPersianNumbersIfEnabled(jalaliRange);\n                        if (el.innerText !== finalText) {\n                            if (!el.hasAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE)) {\n                                el.setAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE, currentText);\n                            }\n                            el.innerText = finalText;\n                            convertedDateCount++;\n                            console.log(`${constant_1.LOG_PREFIX} Converted`, currentText, \"to\", finalText);\n                        }\n                    }\n                }\n                else {\n                    if ((0, dateUtils_1.isPersianDate)(startDateText) || el.hasAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE)) {\n                        const originalDate = el.getAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE);\n                        if (originalDate) {\n                            el.innerText = originalDate;\n                            el.removeAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE);\n                            convertedDateCount++;\n                            console.log(`${constant_1.LOG_PREFIX} Restored original date:`, originalDate);\n                        }\n                        else {\n                            const gregorianStart = (0, dateUtils_1.persianToGregorian)(startDateText);\n                            const gregorianEnd = endDateText ? (0, dateUtils_1.persianToGregorian)(endDateText) : null;\n                            if (gregorianStart) {\n                                const gregorianRange = gregorianEnd ? `${gregorianStart} ← ${gregorianEnd}` : gregorianStart;\n                                const finalText = yield applyPersianNumbersIfEnabled(gregorianRange);\n                                el.innerText = finalText;\n                                convertedDateCount++;\n                                console.log(`${constant_1.LOG_PREFIX} Converted Persian to Gregorian:`, currentText, \"->\", finalText);\n                            }\n                        }\n                    }\n                }\n            }\n            lastDateConversionTime = startTime;\n            console.log(`${constant_1.LOG_PREFIX} Processed ${convertedDateCount} dates`);\n        }\n        catch (error) {\n            console.error(\"Error during conversion:\", error);\n            dateConversionErrorCount++;\n        }\n        finally {\n            isProcessingDateChanges = false;\n        }\n        return convertedDateCount;\n    });\n}\nfunction isElementVisible(element) {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\nfunction resetAllConversions() {\n    return __awaiter(this, void 0, void 0, function* () {\n        console.log(`${constant_1.LOG_PREFIX} Resetting all conversions`);\n        isProcessingDateChanges = true;\n        let resetDateCount = 0;\n        try {\n            dateConversionErrorCount = 0;\n            document.querySelectorAll(`[${constant_1.DATASET_KEYS.ORIGINAL_DATE}]`).forEach(el => {\n                const originalDate = el.getAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE);\n                if (originalDate) {\n                    el.innerText = originalDate;\n                    el.removeAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE);\n                    resetDateCount++;\n                    console.log(`${constant_1.LOG_PREFIX} Reset to original date:`, originalDate);\n                }\n            });\n            const elements = document.querySelectorAll(constant_1.SELECTOR_TABLE_DATES);\n            for (const el of elements) {\n                if (!isElementVisible(el))\n                    continue;\n                const currentText = el.innerText.trim();\n                if (!currentText || !(0, dateUtils_1.isPersianDate)(currentText) || el.hasAttribute(constant_1.DATASET_KEYS.ORIGINAL_DATE))\n                    continue;\n                const [startDateText, endDateText] = currentText.split('→').map(s => s.trim());\n                const gregorianStart = (0, dateUtils_1.persianToGregorian)(startDateText);\n                const gregorianEnd = endDateText ? (0, dateUtils_1.persianToGregorian)(endDateText) : null;\n                if (gregorianStart) {\n                    const gregorianRange = gregorianEnd ? `${gregorianStart} → ${gregorianEnd}` : gregorianStart;\n                    const finalText = yield applyPersianNumbersIfEnabled(gregorianRange);\n                    el.innerText = finalText;\n                    resetDateCount++;\n                    console.log(`${constant_1.LOG_PREFIX} Converted Persian to Gregorian:`, currentText, \"->\", finalText);\n                }\n            }\n            console.log(`${constant_1.LOG_PREFIX} Reset ${resetDateCount} date cells`);\n        }\n        finally {\n            isProcessingDateChanges = false;\n        }\n        return resetDateCount;\n    });\n}\nfunction wasDateConversionRecent(timeThresholdMs = constant_1.TIME_THRESHOLD_MS) {\n    return (Date.now() - lastDateConversionTime) < timeThresholdMs;\n}\nfunction isDateConversionInProgress() {\n    return isProcessingDateChanges;\n}\nfunction getErrorCount() {\n    return dateConversionErrorCount;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertTimeline = convertTimeline;\nconst jalaali_js_1 = __importDefault(require(\"jalaali-js\"));\nconst constant_1 = require(\"./constant\");\nconst MONTHS = {\n    January: 1, February: 2, March: 3, April: 4, May: 5, June: 6,\n    July: 7, August: 8, September: 9, October: 10, November: 11, December: 12\n};\nfunction toPersianDigits(input) {\n    return input.replace(/\\d/g, d => \"۰۱۲۳۴۵۶۷۸۹\"[parseInt(d)]);\n}\nlet currentFont = constant_1.DEFAULT_FONT;\nfunction convertTimelineHeader() {\n    var _a;\n    const headerSpan = document.querySelector('.notion-timeline-view div[style*=\"padding-top\"] span');\n    if (!headerSpan)\n        return;\n    const text = (_a = headerSpan.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n    if (!text)\n        return;\n    const parts = text.split(' ');\n    if (parts.length < 2)\n        return;\n    const monthName = parts[0];\n    const year = parseInt(parts[1], 10);\n    const monthNum = MONTHS[monthName];\n    if (!monthNum || isNaN(year))\n        return;\n    const gregDate = new Date(year, monthNum - 1, 1);\n    const jDate = jalaali_js_1.default.toJalaali(gregDate);\n    const newText = `${constant_1.PERSIAN_MONTHS[jDate.jm - 1]} ${toPersianDigits(jDate.jy.toString())}`;\n    headerSpan.textContent = newText;\n    headerSpan.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n    headerSpan.setAttribute('dir', 'rtl');\n    window.__timelineBaseDate = gregDate;\n}\nfunction convertTimelineDays() {\n    const baseDate = window.__timelineBaseDate;\n    if (!baseDate)\n        return;\n    const dayContainer = document.querySelector('.notion-timeline-view .notion-shimmer-timeline-transition');\n    if (!dayContainer)\n        return;\n    const cells = Array.from(dayContainer.querySelectorAll('div[style*=\"width: 40px\"]'));\n    cells.forEach((el, index) => {\n        const cellDate = new Date(baseDate);\n        cellDate.setDate(baseDate.getDate() + index);\n        const jDate = jalaali_js_1.default.toJalaali(cellDate);\n        const dayText = toPersianDigits(jDate.jd.toString());\n        const span = el.querySelector('span');\n        if (span) {\n            span.textContent = dayText;\n            span.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n            span.setAttribute('dir', 'rtl');\n        }\n        else {\n            el.textContent = dayText;\n            el.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n            el.setAttribute('dir', 'rtl');\n        }\n    });\n    const redCircles = dayContainer.querySelectorAll('div[style*=\"background: rgb(211, 79, 67)\"]');\n    redCircles.forEach(circle => circle.remove());\n}\nfunction convertTimelineMonthLabels() {\n    const container = document.querySelector('.notion-timeline-view > div[style*=\"background: white\"][style*=\"box-shadow: inset\"]');\n    if (!container)\n        return;\n    const baseDate = window.__timelineBaseDate;\n    if (!baseDate)\n        return;\n    const labels = container.querySelectorAll('div');\n    labels.forEach(label => {\n        var _a;\n        const text = (_a = label.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n        if (!text || MONTHS[text] === undefined)\n            return;\n        const left = parseFloat(label.style.left || '0');\n        const daysFromStart = Math.round(left / 40);\n        const cellDate = new Date(baseDate);\n        cellDate.setDate(baseDate.getDate() + daysFromStart);\n        const jDate = jalaali_js_1.default.toJalaali(cellDate);\n        const persianMonth = constant_1.PERSIAN_MONTHS[jDate.jm - 1];\n        label.textContent = persianMonth;\n        label.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n        label.setAttribute('dir', 'rtl');\n    });\n}\nfunction convertTimeline() {\n    chrome.storage.sync.get([constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n        currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n        convertTimelineHeader();\n        convertTimelineDays();\n        convertTimelineMonthLabels();\n    });\n}\nfunction setupTimelineObserver() {\n    const el = document.querySelector('.notion-timeline-view');\n    if (!el)\n        return;\n    const observer = new MutationObserver(() => convertTimeline());\n    observer.observe(el, { childList: true, subtree: true, characterData: true });\n}\nchrome.storage.onChanged.addListener((changes, area) => {\n    if (area === 'sync' && changes[constant_1.STORAGE_KEYS.SELECTED_FONT]) {\n        chrome.storage.sync.get([constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n            currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n            convertTimeline();\n        });\n    }\n});\nfunction initTimelineConversion() {\n    chrome.storage.sync.get([constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n        currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n        if (document.querySelector('.notion-timeline-view')) {\n            convertTimeline();\n            setupTimelineObserver();\n        }\n    });\n}\nsetTimeout(initTimelineConversion, 1500);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tableDateConverter_1 = require(\"../tableDateConverter\");\nconst convertNotif_1 = require(\"../convertNotif\");\nconst fontInjection_1 = require(\"../fontInjection\");\nconst constant_1 = require(\"../constant\");\nrequire(\"../convertCalendar\");\nrequire(\"../convertPageCalendar\");\nrequire(\"../convertTimeline\");\nlet persianInput = false;\nlet fontInjectionEnabled = false;\nlet isProcessingDateConversion = false;\nlet debounceTimer = null;\nchrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_INPUT, constant_1.STORAGE_KEYS.FONT_INJECTION_ENABLED], d => {\n    console.log(`${constant_1.LOG_PREFIX} Initial state loaded`, d);\n    persianInput = !!d[constant_1.STORAGE_KEYS.PERSIAN_INPUT];\n    fontInjectionEnabled = !!d[constant_1.STORAGE_KEYS.FONT_INJECTION_ENABLED];\n    if (persianInput)\n        setTimeout(() => processDates(), 500);\n    (0, fontInjection_1.injectFonts)(fontInjectionEnabled);\n});\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => __awaiter(void 0, void 0, void 0, function* () {\n    if (msg.type === constant_1.MESSAGE_TYPES.APPLY_SETTINGS && msg.data) {\n        persianInput = !!msg.data[constant_1.STORAGE_KEYS.PERSIAN_INPUT];\n        fontInjectionEnabled = !!msg.data[constant_1.STORAGE_KEYS.FONT_INJECTION_ENABLED];\n        if (msg.data[constant_1.STORAGE_KEYS.SELECTED_FONT])\n            (0, fontInjection_1.setCurrentFont)(msg.data[constant_1.STORAGE_KEYS.SELECTED_FONT]);\n        (0, fontInjection_1.injectFonts)(fontInjectionEnabled);\n        if (persianInput)\n            yield processDates();\n        return;\n    }\n    console.log(`${constant_1.LOG_PREFIX} Received message`, msg);\n    if (msg.persianInput !== undefined) {\n        persianInput = msg.persianInput;\n        console.log(`${constant_1.LOG_PREFIX} Persian input set to`, persianInput);\n        yield processDates();\n    }\n    if (msg.fontInjectionEnabled !== undefined) {\n        fontInjectionEnabled = msg.fontInjectionEnabled;\n        console.log(`${constant_1.LOG_PREFIX} Font injection set to`, fontInjectionEnabled);\n        (0, fontInjection_1.injectFonts)(fontInjectionEnabled);\n    }\n    if (msg.selectedFont) {\n        console.log(`${constant_1.LOG_PREFIX} Font selection changed to`, msg.selectedFont);\n        (0, fontInjection_1.setCurrentFont)(msg.selectedFont);\n    }\n    if (msg[constant_1.MESSAGE_TYPES.CHECK_ERRORS]) {\n        const errorCount = (0, tableDateConverter_1.getErrorCount)();\n        console.log(`${constant_1.LOG_PREFIX} Returning error count`, errorCount);\n        sendResponse({ errorCount });\n        return true;\n    }\n    if (msg[constant_1.MESSAGE_TYPES.REFRESH_CONVERSION]) {\n        console.log(`${constant_1.LOG_PREFIX} Reset requested`);\n        const resetCount = yield (0, tableDateConverter_1.resetAllConversions)();\n        const resetMentionCount = (0, convertNotif_1.clearDateMentionConversions)();\n        const totalResetCount = resetCount + resetMentionCount;\n        if (msg.forceReload) {\n            chrome.runtime.sendMessage({ [constant_1.MESSAGE_TYPES.RESET_COMPLETE]: true, count: totalResetCount, reloading: true });\n            window.location.reload();\n            return true;\n        }\n        setTimeout(() => __awaiter(void 0, void 0, void 0, function* () {\n            if (persianInput)\n                yield processDates();\n            chrome.runtime.sendMessage({ [constant_1.MESSAGE_TYPES.RESET_COMPLETE]: true, count: totalResetCount });\n        }), 500);\n        return true;\n    }\n    return false;\n}));\nfunction processDates() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isProcessingDateConversion) {\n            console.log(`${constant_1.LOG_PREFIX} Already processing, skipping`);\n            return;\n        }\n        isProcessingDateConversion = true;\n        try {\n            console.log(`${constant_1.LOG_PREFIX} Processing dates, mode:`, persianInput ? \"Persian\" : \"Gregorian\");\n            const tableCount = yield (0, tableDateConverter_1.convertTableDates)(persianInput);\n            const mentionCount = (0, convertNotif_1.handleDateMentions)(persianInput);\n            const totalCount = tableCount + mentionCount;\n            const errorCount = (0, tableDateConverter_1.getErrorCount)();\n            if (errorCount > 0) {\n                chrome.runtime.sendMessage({ [constant_1.MESSAGE_TYPES.ERROR_COUNT_CHANGED]: true, errorCount });\n            }\n            console.log(`${constant_1.LOG_PREFIX} Processed ${totalCount} dates (${tableCount} table dates, ${mentionCount} mentions)`);\n        }\n        finally {\n            isProcessingDateConversion = false;\n        }\n    });\n}\nfunction setupEventListeners() {\n    document.addEventListener(\"click\", (e) => {\n        var _a, _b, _c, _d;\n        if (!persianInput)\n            return;\n        const target = e.target;\n        if (target.matches(constant_1.SELECTOR_DATE_BUTTONS) ||\n            target.closest(constant_1.SELECTOR_PREV_MONTH) ||\n            target.closest(constant_1.SELECTOR_NEXT_MONTH) ||\n            (target.closest(constant_1.SELECTOR_DATE_FORMAT_CLEAR) && (((_a = target.textContent) === null || _a === void 0 ? void 0 : _a.includes(\"Date format\")) || ((_b = target.textContent) === null || _b === void 0 ? void 0 : _b.includes(\"Clear\"))))) {\n            console.log(`${constant_1.LOG_PREFIX} Date picker interaction detected`);\n            setTimeout(() => processDates(), constant_1.DEBOUNCE_DELAY);\n        }\n        if (target.closest(constant_1.SELECTOR_DATE_MENTION) && (((_c = target.textContent) === null || _c === void 0 ? void 0 : _c.includes('@Date')) || ((_d = target.textContent) === null || _d === void 0 ? void 0 : _d.includes('@Reminder')))) {\n            console.log(`${constant_1.LOG_PREFIX} Date mention interaction detected`);\n            setTimeout(() => processDates(), 800);\n        }\n    });\n    document.addEventListener(\"input\", (e) => {\n        if (!persianInput)\n            return;\n        const target = e.target;\n        if (target.closest(constant_1.SELECTOR_PROPERTY_VALUE) || (target.tagName === \"INPUT\" && target.closest(constant_1.SELECTOR_DATE_PICKER_INPUT))) {\n            console.log(`${constant_1.LOG_PREFIX} Date field input detected`);\n            if (debounceTimer)\n                clearTimeout(debounceTimer);\n            debounceTimer = window.setTimeout(() => processDates(), constant_1.DEBOUNCE_DELAY);\n        }\n    });\n}\nfunction setupMutationObserver() {\n    const observer = new MutationObserver((mutations) => {\n        if (!persianInput || (0, tableDateConverter_1.isDateConversionInProgress)() || (0, tableDateConverter_1.wasDateConversionRecent)(constant_1.TIME_THRESHOLD_MS))\n            return;\n        const hasDateChanges = mutations.some(mutation => {\n            if (mutation.type === 'characterData' && mutation.target.nodeType === Node.TEXT_NODE && mutation.target.textContent)\n                return true;\n            if (mutation.type === 'childList' && mutation.target instanceof HTMLElement &&\n                (mutation.target.closest(constant_1.SELECTOR_PROPERTY_VALUE) || mutation.target.closest(\".notion-date\") ||\n                    mutation.target.closest(\".notion-reminder\") || mutation.target.closest(constant_1.SELECTOR_DATE_PICKER_INPUT)))\n                return true;\n            return false;\n        });\n        if (hasDateChanges) {\n            console.log(`${constant_1.LOG_PREFIX} Date changes detected by observer`);\n            if (debounceTimer)\n                clearTimeout(debounceTimer);\n            debounceTimer = window.setTimeout(() => processDates(), constant_1.DEBOUNCE_DELAY);\n        }\n    });\n    observer.observe(document.body, { childList: true, subtree: true, characterData: true });\n}\nfunction setupErrorReporting() {\n    setInterval(() => {\n        if (!persianInput)\n            return;\n        const errorCount = (0, tableDateConverter_1.getErrorCount)();\n        if (errorCount > 0) {\n            chrome.runtime.sendMessage({ [constant_1.MESSAGE_TYPES.ERROR_COUNT_CHANGED]: true, errorCount }, () => { });\n        }\n    }, 5000);\n}\nsetupEventListeners();\nsetupMutationObserver();\nsetupErrorReporting();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTML_CONSTANTS = exports.SELECTOR_DATE_PICKER_INPUT = exports.SELECTOR_PROPERTY_VALUE = exports.SELECTOR_DATE_MENTION = exports.SELECTOR_DATE_FORMAT_CLEAR = exports.SELECTOR_NEXT_MONTH = exports.SELECTOR_PREV_MONTH = exports.SELECTOR_DATE_BUTTONS = exports.NOTION_URL_PATTERN = exports.DEBOUNCE_DELAY = exports.MESSAGE_TYPES = exports.UI_ELEMENTS = exports.STORAGE_KEYS = exports.SELECTOR_REMINDERS = exports.DATASET_KEYS = exports.SYSTEM_FONTS = exports.DEFAULT_FONT = exports.SELECTOR_GLOBAL_FONTS = exports.SELECTOR_RTL_ELEMENTS = exports.SELECTOR_TODO_BLOCK = exports.SELECTOR_TABLE_BLOCK = exports.SELECTOR_BULLETED_LIST = exports.SELECTOR_TOGGLE_BLOCK = exports.SELECTOR_QUOTE_BLOCK = exports.SELECTOR_NUMBERED_LIST = exports.SELECTOR_CODE_BLOCK = exports.SELECTOR_EDITABLE_TEXT = exports.ALL_FONTS_CSS = exports.DEFAULT_FONTS = exports.UNICODE_RANGE = exports.PANEL_STATE_KEY = exports.SELECTOR_MENTIONS = exports.CLICK_INSTRUCTION = exports.NO_DATES_MESSAGE = exports.PANEL_TITLE = exports.TOAST_ID = exports.SHOW_BTN_ID = exports.HIDE_BTN_ID = exports.MINIMIZE_BTN_ID = exports.CONTENT_ID = exports.PANEL_ID = exports.SELECTOR_TABLE_DATES = exports.TIME_THRESHOLD_MS = exports.STANDARD_DATE_FORMAT = exports.PERSIAN_MONTHS = exports.MONTHS = exports.LOG_PREFIX = void 0;\n// Logging\nexports.LOG_PREFIX = \"mtlog:\";\n// Date Utilities\nexports.MONTHS = {\n    january: 1, february: 2, march: 3, april: 4, may: 5, june: 6,\n    july: 7, august: 8, september: 9, october: 10, november: 11, december: 12,\n    jan: 1, feb: 2, mar: 3, apr: 4, jun: 6, jul: 7, aug: 8, sep: 9, sept: 9, oct: 10, nov: 11, dec: 12\n};\nexports.PERSIAN_MONTHS = [\n    'فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور',\n    'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'\n];\nexports.STANDARD_DATE_FORMAT = /^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/;\n// Table Date Converter\nexports.TIME_THRESHOLD_MS = 500;\nexports.SELECTOR_TABLE_DATES = \"[data-testid='property-value'] div, div.notion-date\";\n// Convert Notifications\nexports.PANEL_ID = 'persian-dates-panel';\nexports.CONTENT_ID = 'persian-dates-content';\nexports.MINIMIZE_BTN_ID = 'persian-dates-minimize';\nexports.HIDE_BTN_ID = 'persian-dates-hide';\nexports.SHOW_BTN_ID = 'persian-dates-show-button';\nexports.TOAST_ID = 'persian-dates-toast';\nexports.PANEL_TITLE = 'Persian Dates';\nexports.NO_DATES_MESSAGE = 'No date mentions found.';\nexports.CLICK_INSTRUCTION = 'Click a date to copy Persian format or scroll to its location';\nexports.SELECTOR_MENTIONS = '.notion-text-mention-token .notion-reminder';\nexports.PANEL_STATE_KEY = 'persian-dates-panel-state';\n// Font Injection\nexports.UNICODE_RANGE = 'U+0600-06FF, U+0750-077F, U+FB50-FDFF, U+FE70-FEFF';\nexports.DEFAULT_FONTS = [\n    { en_name: \"Vazirmatn\", fa_name: \"وزیر متن\", creator: \"صابر راستی کردار\" },\n    { en_name: \"Sahel\", fa_name: \"ساحل\", creator: \"صابر راستی کردار\" },\n    { en_name: \"Parastoo\", fa_name: \"پرستو\", creator: \"صابر راستی کردار\" }\n];\nexports.ALL_FONTS_CSS = `\n/* ========== Vazirmatn ========== */\n@font-face {\n  font-family: \"Vazirmatn\";\n  src:\n    url(\"${chrome.runtime.getURL('assets/fonts/vazir/Vazirmatn[wght].woff2')}\")\n      format(\"woff2 supports variations\"),\n    url(\"${chrome.runtime.getURL('assets/fonts/vazir/Vazirmatn[wght].woff2')}\")\n      format(\"woff2-variations\");\n  font-weight: 100 900;\n  font-style: normal;\n  font-display: swap;\n  unicode-range: ${exports.UNICODE_RANGE};\n}\n\n/* ========== Sahel ========== */\n@font-face {\n  font-family: \"Sahel\";\n  src:\n    url(\"${chrome.runtime.getURL('assets/fonts/sahel/Sahel-VF.woff2')}\")\n      format(\"woff2 supports variations\"),\n    url(\"${chrome.runtime.getURL('assets/fonts/sahel/Sahel-VF.woff2')}\")\n      format(\"woff2-variations\");\n  font-weight: 100 900;\n  font-style: normal;\n  font-display: swap;\n  unicode-range: ${exports.UNICODE_RANGE};\n}\n\n/* ========== Parastoo ========== */\n@font-face {\n  font-family: \"Parastoo\";\n  src: url(\"${chrome.runtime.getURL('assets/fonts/parastoo/Parastoo.woff2')}\") format(\"woff2\");\n  font-weight: normal;\n  font-style: normal;\n  unicode-range: ${exports.UNICODE_RANGE};\n}\n@font-face {\n  font-family: \"Parastoo\";\n  src: url(\"${chrome.runtime.getURL('assets/fonts/parastoo/Parastoo-Bold.woff2')}\")\n    format(\"woff2\");\n  font-weight: bold;\n  font-style: normal;\n  unicode-range: ${exports.UNICODE_RANGE};\n}\n\n/* Keep code blocks in LTR */\n.notion-text-content[data-content-type=\"code\"] {\n  direction: ltr !important;\n  text-align: left !important;\n  font-family: \"SF Mono\", \"Consolas\", \"Monaco\", \"Andale Mono\", monospace !important;\n}\n`;\nexports.SELECTOR_EDITABLE_TEXT = '.notranslate[data-content-editable-leaf=\"true\"]';\nexports.SELECTOR_CODE_BLOCK = '[data-content-type=\"code\"]';\nexports.SELECTOR_NUMBERED_LIST = '.notion-selectable.notion-numbered_list-block';\nexports.SELECTOR_QUOTE_BLOCK = '.notion-quote-block';\nexports.SELECTOR_TOGGLE_BLOCK = '.notion-selectable.notion-toggle-block';\nexports.SELECTOR_BULLETED_LIST = '.notion-selectable.notion-bulleted_list-block';\nexports.SELECTOR_TABLE_BLOCK = '.notion-table-block';\nexports.SELECTOR_TODO_BLOCK = '.notion-to_do-block';\nexports.SELECTOR_RTL_ELEMENTS = '.notion-body h1, .notion-body h2, .notion-body h3, .notion-body h4, .notion-body h5, .notion-body h6, ' +\n    '.notion-table-view th, .notion-table-view td, .notion-collection_view-block div[data-content-editable-void=\"true\"] > div:nth-child(2), ' +\n    '.notion-table-view-header-cell, .notion-table-view-cell';\nexports.SELECTOR_GLOBAL_FONTS = [\n    '.notion-page-content',\n    '.notion-table-view',\n    '.notion-board-view',\n    '.notion-gallery-view',\n    '.notion-page-block',\n    '.notion-topbar',\n    '.notion-body',\n    '.notion-selectable',\n    '.notion-collection_view-block',\n    '.notion-frame',\n    '.notion-collection-item'\n].join(', ');\nexports.DEFAULT_FONT = 'Vazirmatn';\nexports.SYSTEM_FONTS = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, sans-serif';\n// Convert Text\nexports.DATASET_KEYS = {\n    ORIGINAL_DATE: 'originalDate',\n    CONVERTED: 'converted'\n};\nexports.SELECTOR_REMINDERS = '.notion-reminder';\n// Storage Keys\nexports.STORAGE_KEYS = {\n    PERSIAN_INPUT: 'persianInput',\n    FONT_INJECTION_ENABLED: 'fontInjectionEnabled',\n    SELECTED_FONT: 'selectedFont',\n    PERSIAN_NUMBERS: 'persianNumbers'\n};\n// UI Elements\nexports.UI_ELEMENTS = {\n    PERSIAN_TOGGLE: 'persian-toggle',\n    FONT_TOGGLE: 'font-toggle',\n    RESET_BUTTON: 'reset-button',\n    ERROR_MESSAGE: 'error-message',\n    FONT_SELECTOR_CONTAINER: 'font-selector-container',\n    FONT_SELECTOR: 'font-selector',\n    FONT_AUTHOR: 'font-author',\n    STATUS: 'status',\n    CALL_MESSAGE: 'call-message'\n};\n// Message Types\nexports.MESSAGE_TYPES = {\n    APPLY_SETTINGS: 'applySettings',\n    RESET_COMPLETE: 'resetComplete',\n    ERROR_COUNT_CHANGED: 'errorCountChanged',\n    CHECK_ERRORS: 'checkErrors',\n    REFRESH_CONVERSION: 'refreshConversion'\n};\n// Content Script\nexports.DEBOUNCE_DELAY = 300;\nexports.NOTION_URL_PATTERN = '*://*.notion.so/*';\nexports.SELECTOR_DATE_BUTTONS = 'button[name=\"day\"]';\nexports.SELECTOR_PREV_MONTH = 'button[name=\"previous-month\"]';\nexports.SELECTOR_NEXT_MONTH = 'button[name=\"next-month\"]';\nexports.SELECTOR_DATE_FORMAT_CLEAR = '[role=\"button\"]';\nexports.SELECTOR_DATE_MENTION = '.notion-selectable';\nexports.SELECTOR_PROPERTY_VALUE = '[data-testid=\"property-value\"]';\nexports.SELECTOR_DATE_PICKER_INPUT = '.rdp';\n// Popup HTML\nexports.HTML_CONSTANTS = {\n    TITLE: 'نوشن فارسی',\n    HEADER_TEXT: 'نوشن فارسی',\n    CALENDAR_LABEL: 'تاریخ شمسی',\n    FONT_LABEL: 'فونت فارسی',\n    CALL_MESSAGE: 'اگه چیزی خراب بود، یه خبر بهم بده  🐞',\n    FOOTER_NAME: 'Matthew Truth'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPersianDate = isPersianDate;\nexports.parseGregorian = parseGregorian;\nexports.formatJalali = formatJalali;\nexports.persianToGregorian = persianToGregorian;\nconst constant_1 = require(\"./constant\");\nconst jalaali = require('jalaali-js');\nfunction isPersianDate(text) {\n    if (!text || typeof text !== 'string')\n        return false;\n    text = text.trim();\n    const standardFormat = text.match(constant_1.STANDARD_DATE_FORMAT);\n    if (standardFormat) {\n        const year = parseInt(standardFormat[1], 10);\n        const month = parseInt(standardFormat[2], 10);\n        const day = parseInt(standardFormat[3], 10);\n        if (year >= 1300 && year < 1500 && month >= 1 && month <= 12 && day >= 1 && day <= 31) {\n            return jalaali.isValidJalaaliDate(year, month, day);\n        }\n    }\n    return constant_1.PERSIAN_MONTHS.some(month => text.includes(month));\n}\nfunction parseGregorian(text) {\n    if (!text || typeof text !== 'string' || isPersianDate(text))\n        return null;\n    text = text.trim();\n    try {\n        let m = text.match(/\\b([A-Za-z]+)\\s+(\\d{1,2}),\\s*(\\d{4})\\b/);\n        if (m) {\n            const mon = constant_1.MONTHS[m[1].toLowerCase()];\n            if (!mon)\n                return null;\n            return new Date(+m[3], mon - 1, +m[2]);\n        }\n        m = text.match(/\\b(\\d{4})[-/](\\d{1,2})[-/](\\d{1,2})\\b/);\n        if (m) {\n            const year = parseInt(m[1], 10);\n            const month = parseInt(m[2], 10);\n            const day = parseInt(m[3], 10);\n            if (year >= 1300 && year < 1500 && !Object.keys(constant_1.MONTHS).some(month => text.toLowerCase().includes(month.toLowerCase()))) {\n                return null;\n            }\n            if (month < 1 || month > 12 || day < 1 || day > 31)\n                return null;\n            return new Date(year, month - 1, day);\n        }\n        m = text.match(/\\b(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})\\b/);\n        if (m) {\n            const month = parseInt(m[1], 10);\n            const day = parseInt(m[2], 10);\n            const year = parseInt(m[3], 10);\n            if (year >= 1300 && year < 1500)\n                return null;\n            if (month < 1 || month > 12 || day < 1 || day > 31)\n                return null;\n            return new Date(year, month - 1, day);\n        }\n        m = text.match(/\\b(\\d{4})\\s+([A-Za-z]+)\\s+(\\d{1,2})\\b/);\n        if (m) {\n            const mon = constant_1.MONTHS[m[2].toLowerCase()];\n            if (!mon)\n                return null;\n            return new Date(+m[1], mon - 1, +m[3]);\n        }\n        if (/today/i.test(text))\n            return new Date();\n        if (/yesterday/i.test(text)) {\n            const yesterday = new Date();\n            yesterday.setDate(yesterday.getDate() - 1);\n            return yesterday;\n        }\n        if (/tomorrow/i.test(text)) {\n            const tomorrow = new Date();\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            return tomorrow;\n        }\n    }\n    catch (error) {\n        console.error(\"Error parsing date:\", text, error);\n    }\n    return null;\n}\nfunction formatJalali(d) {\n    if (!d || !(d instanceof Date) || isNaN(d.getTime())) {\n        console.error(\"Invalid date passed to formatJalali\", d);\n        return \"Invalid Date\";\n    }\n    try {\n        const jalali = jalaali.toJalaali(d);\n        return `${jalali.jy}/${jalali.jm.toString().padStart(2, '0')}/${jalali.jd.toString().padStart(2, '0')}`;\n    }\n    catch (error) {\n        console.error(\"Error in formatJalali:\", error);\n        return \"Invalid Date\";\n    }\n}\nfunction persianToGregorian(persianDateStr) {\n    try {\n        const match = persianDateStr.match(constant_1.STANDARD_DATE_FORMAT);\n        if (!match)\n            return null;\n        const jy = parseInt(match[1], 10);\n        const jm = parseInt(match[2], 10);\n        const jd = parseInt(match[3], 10);\n        if (!jalaali.isValidJalaaliDate(jy, jm, jd))\n            return null;\n        const gregorian = jalaali.toGregorian(jy, jm, jd);\n        return `${gregorian.gy}/${gregorian.gm.toString().padStart(2, '0')}/${gregorian.gd.toString().padStart(2, '0')}`;\n    }\n    catch (error) {\n        console.error(\"Error converting Persian to Gregorian:\", error);\n        return null;\n    }\n}\n","/*\n  Expose functions.\n*/\nmodule.exports =\n  { toJalaali: toJalaali\n  , toGregorian: toGregorian\n  , isValidJalaaliDate: isValidJalaaliDate\n  , isLeapJalaaliYear: isLeapJalaaliYear\n  , jalaaliMonthLength: jalaaliMonthLength\n  , jalCal: jalCal\n  , j2d: j2d\n  , d2j: d2j\n  , g2d: g2d\n  , d2g: d2g\n  , jalaaliToDateObject: jalaaliToDateObject\n  , jalaaliWeek: jalaaliWeek\n  }\n\n/*\n  Jalaali years starting the 33-year rule.\n*/\nvar breaks =  [ -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210\n  , 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178\n  ]\n\n/*\n  Converts a Gregorian date to Jalaali.\n*/\nfunction toJalaali(gy, gm, gd) {\n  if (Object.prototype.toString.call(gy) === '[object Date]') {\n    gd = gy.getDate()\n    gm = gy.getMonth() + 1\n    gy = gy.getFullYear()\n  }\n  return d2j(g2d(gy, gm, gd))\n}\n\n/*\n  Converts a Jalaali date to Gregorian.\n*/\nfunction toGregorian(jy, jm, jd) {\n  return d2g(j2d(jy, jm, jd))\n}\n\n/*\n  Checks whether a Jalaali date is valid or not.\n*/\nfunction isValidJalaaliDate(jy, jm, jd) {\n  return  jy >= -61 && jy <= 3177 &&\n          jm >= 1 && jm <= 12 &&\n          jd >= 1 && jd <= jalaaliMonthLength(jy, jm)\n}\n\n/*\n  Is this a leap year or not?\n*/\nfunction isLeapJalaaliYear(jy) {\n  return jalCalLeap(jy) === 0\n}\n\n/*\n  Number of days in a given month in a Jalaali year.\n*/\nfunction jalaaliMonthLength(jy, jm) {\n  if (jm <= 6) return 31\n  if (jm <= 11) return 30\n  if (isLeapJalaaliYear(jy)) return 30\n  return 29\n}\n\n/*\n    This function determines if the Jalaali (Persian) year is\n    leap (366-day long) or is the common year (365 days)\n\n    @param jy Jalaali calendar year (-61 to 3177)\n    @returns number of years since the last leap year (0 to 4)\n */\nfunction jalCalLeap(jy) {\n  var bl = breaks.length\n    , jp = breaks[0]\n    , jm\n    , jump\n    , leap\n    , n\n    , i\n\n  if (jy < jp || jy >= breaks[bl - 1])\n    throw new Error('Invalid Jalaali year ' + jy)\n\n  for (i = 1; i < bl; i += 1) {\n    jm = breaks[i]\n    jump = jm - jp\n    if (jy < jm)\n      break\n    jp = jm\n  }\n  n = jy - jp\n\n  if (jump - n < 6)\n    n = n - jump + div(jump + 4, 33) * 33\n  leap = mod(mod(n + 1, 33) - 1, 4)\n  if (leap === -1) {\n    leap = 4\n  }\n\n  return leap\n}\n\n/*\n  This function determines if the Jalaali (Persian) year is\n  leap (366-day long) or is the common year (365 days), and\n  finds the day in March (Gregorian calendar) of the first\n  day of the Jalaali year (jy).\n\n  @param jy Jalaali calendar year (-61 to 3177)\n  @param withoutLeap when don't need leap (true or false) default is false\n  @return\n    leap: number of years since the last leap year (0 to 4)\n    gy: Gregorian year of the beginning of Jalaali year\n    march: the March day of Farvardin the 1st (1st day of jy)\n  @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n  @see: http://www.fourmilab.ch/documents/calendar/\n*/\nfunction jalCal(jy, withoutLeap) {\n  var bl = breaks.length\n    , gy = jy + 621\n    , leapJ = -14\n    , jp = breaks[0]\n    , jm\n    , jump\n    , leap\n    , leapG\n    , march\n    , n\n    , i\n\n  if (jy < jp || jy >= breaks[bl - 1])\n    throw new Error('Invalid Jalaali year ' + jy)\n\n  // Find the limiting years for the Jalaali year jy.\n  for (i = 1; i < bl; i += 1) {\n    jm = breaks[i]\n    jump = jm - jp\n    if (jy < jm)\n      break\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4)\n    jp = jm\n  }\n  n = jy - jp\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalaali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4)\n  if (mod(jump, 33) === 4 && jump - n === 4)\n    leapJ += 1\n\n  // And the same in the Gregorian calendar (until the year gy).\n  leapG = div(gy, 4) - div((div(gy, 100) + 1) * 3, 4) - 150\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  march = 20 + leapJ - leapG\n\n  // return with gy and march when we don't need leap\n  if (withoutLeap) return { gy: gy, march: march };\n\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6)\n    n = n - jump + div(jump + 4, 33) * 33\n  leap = mod(mod(n + 1, 33) - 1, 4)\n  if (leap === -1) {\n    leap = 4\n  }\n\n  return  { leap: leap\n          , gy: gy\n          , march: march\n          }\n}\n\n/*\n  Converts a date of the Jalaali calendar to the Julian Day number.\n\n  @param jy Jalaali year (1 to 3100)\n  @param jm Jalaali month (1 to 12)\n  @param jd Jalaali day (1 to 29/31)\n  @return Julian Day number\n*/\nfunction j2d(jy, jm, jd) {\n  var r = jalCal(jy, true)\n  return g2d(r.gy, 3, r.march) + (jm - 1) * 31 - div(jm, 7) * (jm - 7) + jd - 1\n}\n\n/*\n  Converts the Julian Day number to a date in the Jalaali calendar.\n\n  @param jdn Julian Day number\n  @return\n    jy: Jalaali year (1 to 3100)\n    jm: Jalaali month (1 to 12)\n    jd: Jalaali day (1 to 29/31)\n*/\nfunction d2j(jdn) {\n  var gy = d2g(jdn).gy // Calculate Gregorian year (gy).\n    , jy = gy - 621\n    , r = jalCal(jy, false)\n    , jdn1f = g2d(gy, 3, r.march)\n    , jd\n    , jm\n    , k\n\n  // Find number of days that passed since 1 Farvardin.\n  k = jdn - jdn1f\n  if (k >= 0) {\n    if (k <= 185) {\n      // The first 6 months.\n      jm = 1 + div(k, 31)\n      jd = mod(k, 31) + 1\n      return  { jy: jy\n              , jm: jm\n              , jd: jd\n              }\n    } else {\n      // The remaining months.\n      k -= 186\n    }\n  } else {\n    // Previous Jalaali year.\n    jy -= 1\n    k += 179\n    if (r.leap === 1)\n      k += 1\n  }\n  jm = 7 + div(k, 30)\n  jd = mod(k, 30) + 1\n  return  { jy: jy\n          , jm: jm\n          , jd: jd\n          }\n}\n\n/*\n  Calculates the Julian Day number from Gregorian or Julian\n  calendar dates. This integer number corresponds to the noon of\n  the date (i.e. 12 hours of Universal Time).\n  The procedure was tested to be good since 1 March, -100100 (of both\n  calendars) up to a few million years into the future.\n\n  @param gy Calendar year (years BC numbered 0, -1, -2, ...)\n  @param gm Calendar month (1 to 12)\n  @param gd Calendar day of the month (1 to 28/29/30/31)\n  @return Julian Day number\n*/\nfunction g2d(gy, gm, gd) {\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4)\n      + div(153 * mod(gm + 9, 12) + 2, 5)\n      + gd - 34840408\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752\n  return d\n}\n\n/*\n  Calculates Gregorian and Julian calendar dates from the Julian Day number\n  (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n  calendars) to some millions years ahead of the present.\n\n  @param jdn Julian Day number\n  @return\n    gy: Calendar year (years BC numbered 0, -1, -2, ...)\n    gm: Calendar month (1 to 12)\n    gd: Calendar day of the month M (1 to 28/29/30/31)\n*/\nfunction d2g(jdn) {\n  var j\n    , i\n    , gd\n    , gm\n    , gy\n  j = 4 * jdn + 139361631\n  j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908\n  i = div(mod(j, 1461), 4) * 5 + 308\n  gd = div(mod(i, 153), 5) + 1\n  gm = mod(div(i, 153), 12) + 1\n  gy = div(j, 1461) - 100100 + div(8 - gm, 6)\n  return  { gy: gy\n          , gm: gm\n          , gd: gd\n          }\n}\n\n/**\n * Return Saturday and Friday day of current week(week start in Saturday)\n * @param {number} jy jalaali year\n * @param {number} jm jalaali month\n * @param {number} jd jalaali day\n * @returns Saturday and Friday of current week\n */\nfunction jalaaliWeek(jy, jm, jd) {\n  var dayOfWeek = jalaaliToDateObject(jy, jm, jd).getDay();\n\n  var startDayDifference = dayOfWeek == 6 ? 0 : -(dayOfWeek+1);\n  var endDayDifference = 6+startDayDifference;\n\n  return {\n    saturday: d2j(j2d(jy, jm, jd+startDayDifference)),\n    friday: d2j(j2d(jy, jm, jd+endDayDifference))\n  }\n}\n\n/**\n * Convert Jalaali calendar dates to javascript Date object\n * @param {number} jy jalaali year\n * @param {number} jm jalaali month\n * @param {number} jd jalaali day\n * @param {number} [h] hours\n * @param {number} [m] minutes\n * @param {number} [s] seconds\n * @param {number} [ms] milliseconds\n * @returns Date object of the jalaali calendar dates\n */\nfunction jalaaliToDateObject(\n  jy,\n  jm,\n  jd,\n  h,\n  m,\n  s,\n  ms\n) {\n  var gregorianCalenderDate = toGregorian(jy, jm, jd);\n\n  return new Date(\n    gregorianCalenderDate.gy,\n    gregorianCalenderDate.gm - 1,\n    gregorianCalenderDate.gd,\n    h || 0,\n    m || 0,\n    s || 0,\n    ms || 0\n  );\n}\n\n/*\n  Utility helper functions.\n*/\n\nfunction div(a, b) {\n  return ~~(a / b)\n}\n\nfunction mod(a, b) {\n  return a - ~~(a / b) * b\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.saveSelectedFont = saveSelectedFont;\nexports.loadSelectedFont = loadSelectedFont;\nexports.setCurrentFont = setCurrentFont;\nexports.injectFonts = injectFonts;\nconst constant_1 = require(\"./constant\");\nlet fontStyleElement = null;\nlet observer = null;\nlet currentFont = constant_1.DEFAULT_FONT;\nfunction toPersianDigits(input) {\n    return input.replace(/\\d/g, d => \"۰۱۲۳۴۵۶۷۸۹\"[parseInt(d)]);\n}\nfunction containsPersianArabic(text) {\n    const persianArabicRegex = /[\\u0600-\\u06FF\\u0750-\\u077F\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\n    return persianArabicRegex.test(text);\n}\nfunction processTextNode(node) {\n    var _a;\n    const text = node.textContent || '';\n    if (!containsPersianArabic(text))\n        return;\n    const container = (_a = node.parentElement) === null || _a === void 0 ? void 0 : _a.closest(constant_1.SELECTOR_EDITABLE_TEXT);\n    if (!container || container.closest(constant_1.SELECTOR_CODE_BLOCK))\n        return;\n    container.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n    container.style.direction = 'rtl';\n    container.style.textAlign = 'right';\n}\nfunction processSubtree(root) {\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, null);\n    let node;\n    while ((node = walker.nextNode()))\n        processTextNode(node);\n}\nfunction updateNumberedListBlock(block) {\n    const pseudo = block.querySelector('.pseudoBefore');\n    if (pseudo) {\n        let content = pseudo.style.getPropertyValue('--pseudoBefore--content') || pseudo.textContent || \"\";\n        content = content.replace(/[\"']/g, \"\").trim();\n        const persianContent = toPersianDigits(content);\n        pseudo.style.removeProperty(\"--pseudoBefore--content\");\n        pseudo.textContent = persianContent;\n        pseudo.style.direction = 'rtl';\n        pseudo.style.textAlign = 'right';\n    }\n}\nfunction applyRTLToNumberedLists() {\n    document.querySelectorAll(constant_1.SELECTOR_NUMBERED_LIST).forEach((block) => {\n        if (containsPersianArabic(block.textContent || \"\")) {\n            updateNumberedListBlock(block);\n            block.style.direction = 'rtl';\n            block.style.textAlign = 'right';\n        }\n    });\n}\nfunction applyRTLToQuotes() {\n    document.querySelectorAll(constant_1.SELECTOR_QUOTE_BLOCK).forEach((block) => {\n        if (containsPersianArabic(block.textContent || \"\")) {\n            const bq = block.querySelector(\"blockquote\");\n            if (bq) {\n                const inner = bq.querySelector(\"div[style*='border-left']\");\n                if (inner) {\n                    const computed = window.getComputedStyle(inner);\n                    const originalPaddingLeft = computed.paddingLeft;\n                    const originalPaddingRight = computed.paddingRight;\n                    inner.style.borderLeft = \"none\";\n                    inner.style.borderRight = \"3px solid currentcolor\";\n                    inner.style.paddingLeft = originalPaddingRight;\n                    inner.style.paddingRight = originalPaddingLeft;\n                }\n                bq.style.direction = \"rtl\";\n                bq.style.textAlign = \"right\";\n            }\n        }\n    });\n}\nfunction applyRTLToToggleBlocks() {\n    document.querySelectorAll(constant_1.SELECTOR_TOGGLE_BLOCK).forEach((block) => {\n        if (containsPersianArabic(block.textContent || \"\")) {\n            const toggleBlock = block;\n            toggleBlock.style.textAlign = \"right\";\n            const flexContainer = toggleBlock.firstElementChild;\n            if (flexContainer)\n                flexContainer.style.setProperty(\"flex-direction\", \"row-reverse\", \"important\");\n        }\n    });\n}\nfunction applyAdditionalRTLLogic() {\n    document.querySelectorAll(constant_1.SELECTOR_BULLETED_LIST).forEach((block) => {\n        block.setAttribute(\"dir\", \"rtl\");\n    });\n    document.querySelectorAll(constant_1.SELECTOR_TABLE_BLOCK).forEach((block) => {\n        if (Array.from(block.querySelectorAll(\"*\")).some(el => containsPersianArabic(el.textContent || \"\"))) {\n            block.setAttribute(\"dir\", \"rtl\");\n        }\n    });\n    document.querySelectorAll(constant_1.SELECTOR_TODO_BLOCK).forEach((block) => {\n        if (Array.from(block.querySelectorAll(\"*\")).some(el => containsPersianArabic(el.textContent || \"\"))) {\n            block.setAttribute(\"dir\", \"rtl\");\n        }\n    });\n}\nfunction applyRTLToNewParts() {\n    document.querySelectorAll(constant_1.SELECTOR_RTL_ELEMENTS).forEach((el) => {\n        if (containsPersianArabic(el.textContent || \"\")) {\n            const element = el;\n            element.style.direction = \"rtl\";\n            element.style.textAlign = \"right\";\n            element.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n        }\n    });\n}\nfunction applyGlobalFontStyles() {\n    document.querySelectorAll(constant_1.SELECTOR_GLOBAL_FONTS).forEach((el) => {\n        el.style.setProperty(\"font-family\", `${currentFont}, ${constant_1.SYSTEM_FONTS}`, \"important\");\n    });\n}\nfunction setupObserver() {\n    if (observer)\n        return;\n    observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type === 'childList') {\n                mutation.addedNodes.forEach(node => { if (node.nodeType === Node.ELEMENT_NODE)\n                    processSubtree(node); });\n            }\n            else if (mutation.type === 'characterData') {\n                processTextNode(mutation.target);\n            }\n        }\n        applyAdditionalRTLLogic();\n        applyGlobalFontStyles();\n        applyRTLToNewParts();\n        applyRTLToNumberedLists();\n        applyRTLToQuotes();\n        applyRTLToToggleBlocks();\n    });\n    observer.observe(document.body, { childList: true, subtree: true, characterData: true });\n    processSubtree(document.body);\n    applyAdditionalRTLLogic();\n    applyGlobalFontStyles();\n    applyRTLToNewParts();\n    applyRTLToNumberedLists();\n    applyRTLToQuotes();\n    applyRTLToToggleBlocks();\n}\nfunction cleanupObserver() {\n    if (observer) {\n        observer.disconnect();\n        observer = null;\n    }\n}\nfunction saveSelectedFont(fontFamily) {\n    return new Promise((resolve) => {\n        chrome.storage.sync.set({ [constant_1.STORAGE_KEYS.SELECTED_FONT]: fontFamily }, () => resolve());\n    });\n}\nfunction loadSelectedFont() {\n    return new Promise((resolve) => {\n        chrome.storage.sync.get([constant_1.STORAGE_KEYS.SELECTED_FONT], (result) => resolve(result[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT));\n    });\n}\nfunction setCurrentFont(fontFamily) {\n    currentFont = fontFamily;\n    if (fontStyleElement) {\n        document.querySelectorAll(constant_1.SELECTOR_EDITABLE_TEXT).forEach((el) => {\n            const element = el;\n            if (containsPersianArabic(element.textContent || '')) {\n                element.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n            }\n        });\n    }\n    applyGlobalFontStyles();\n    applyRTLToNewParts();\n    applyRTLToNumberedLists();\n    applyRTLToQuotes();\n    applyRTLToToggleBlocks();\n}\nfunction injectFonts(enabled) {\n    if (enabled) {\n        loadSelectedFont().then((fontFamily) => {\n            currentFont = fontFamily;\n            if (!fontStyleElement) {\n                fontStyleElement = document.createElement('style');\n                fontStyleElement.textContent = constant_1.ALL_FONTS_CSS;\n                document.head.appendChild(fontStyleElement);\n            }\n            setupObserver();\n        });\n    }\n    else {\n        if (fontStyleElement) {\n            fontStyleElement.remove();\n            fontStyleElement = null;\n        }\n        document.querySelectorAll(constant_1.SELECTOR_EDITABLE_TEXT).forEach((el) => {\n            const element = el;\n            element.style.fontFamily = '';\n            element.style.direction = '';\n            element.style.textAlign = '';\n        });\n        document.querySelectorAll(constant_1.SELECTOR_GLOBAL_FONTS).forEach((el) => {\n            el.style.removeProperty(\"font-family\");\n        });\n        document.querySelectorAll(constant_1.SELECTOR_RTL_ELEMENTS).forEach((el) => {\n            const element = el;\n            element.style.direction = '';\n            element.style.textAlign = '';\n            element.style.fontFamily = '';\n        });\n        document.querySelectorAll(constant_1.SELECTOR_NUMBERED_LIST).forEach((block) => {\n            block.style.direction = '';\n            block.style.textAlign = '';\n            const pseudo = block.querySelector('.pseudoBefore');\n            if (pseudo) {\n                pseudo.style.direction = '';\n                pseudo.style.textAlign = '';\n            }\n        });\n        document.querySelectorAll(constant_1.SELECTOR_QUOTE_BLOCK).forEach((block) => {\n            const bq = block.querySelector(\"blockquote\");\n            if (bq) {\n                const inner = bq.querySelector(\"div[style*='border-right']\");\n                if (inner) {\n                    inner.style.borderRight = \"none\";\n                    inner.style.borderLeft = \"3px solid currentcolor\";\n                    inner.style.paddingLeft = \"\";\n                    inner.style.paddingRight = \"\";\n                }\n                bq.style.direction = \"\";\n                bq.style.textAlign = \"\";\n            }\n        });\n        document.querySelectorAll(constant_1.SELECTOR_TOGGLE_BLOCK).forEach((block) => {\n            const toggleBlock = block;\n            toggleBlock.style.textAlign = \"\";\n            const flexContainer = toggleBlock.firstElementChild;\n            if (flexContainer)\n                flexContainer.style.removeProperty(\"flex-direction\");\n        });\n        document.querySelectorAll(`${constant_1.SELECTOR_BULLETED_LIST}, ${constant_1.SELECTOR_TABLE_BLOCK}, ${constant_1.SELECTOR_TODO_BLOCK}`).forEach((block) => {\n            block.removeAttribute(\"dir\");\n        });\n        cleanupObserver();\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPageCalendar = convertPageCalendar;\nconst jalaali_js_1 = __importDefault(require(\"jalaali-js\"));\nconst constant_1 = require(\"./constant\");\nconst MONTHS = {\n    January: 1, February: 2, March: 3, April: 4, May: 5, June: 6,\n    July: 7, August: 8, September: 9, October: 10, November: 11, December: 12,\n    Jan: 1, Feb: 2, Mar: 3, Apr: 4, Jun: 6, Jul: 7, Aug: 8, Sep: 9, Oct: 10, Nov: 11, Dec: 12\n};\nconst persianDayNames = {\n    Sun: \"یکشنبه\", Mon: \"دوشنبه\", Tue: \"سه‌شنبه\",\n    Wed: \"چهارشنبه\", Thu: \"پنج‌شنبه\", Fri: \"جمعه\", Sat: \"شنبه\"\n};\nfunction toPersianDigits(input) {\n    return input.replace(/\\d/g, d => \"۰۱۲۳۴۵۶۷۸۹\"[+d]);\n}\nlet currentFont = constant_1.DEFAULT_FONT;\nfunction getHeaderElement() {\n    return document.querySelector('.notion-calendar-view > div:first-child div[style*=\"font-weight: 600\"]');\n}\nfunction convertPageCalendarHeader() {\n    const headerEl = getHeaderElement();\n    if (!headerEl)\n        return;\n    // Save original header if not saved\n    if (!headerEl.getAttribute('data-original-header')) {\n        headerEl.setAttribute('data-original-header', headerEl.textContent || \"\");\n    }\n    const orig = headerEl.getAttribute('data-original-header') || \"\";\n    const parts = orig.split(/\\s+/);\n    if (parts.length < 2)\n        return;\n    const monthName = parts[0], year = parseInt(parts[1]), monthNum = MONTHS[monthName];\n    if (!monthNum || isNaN(year))\n        return;\n    const gregDate = new Date(year, monthNum - 1, 1), jDate = jalaali_js_1.default.toJalaali(gregDate), persianMonth = constant_1.PERSIAN_MONTHS[jDate.jm - 1], persianYear = toPersianDigits(jDate.jy.toString());\n    headerEl.textContent = `${persianMonth} ${persianYear}`;\n    headerEl.setAttribute('dir', 'rtl');\n    headerEl.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n}\nfunction convertPageCalendarDayNames() {\n    const dayNameEls = document.querySelectorAll('.notion-calendar-header-days > div');\n    dayNameEls.forEach(el => {\n        var _a;\n        const htmlEl = el;\n        const original = (_a = htmlEl.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n        if (original && original in persianDayNames) {\n            htmlEl.textContent = persianDayNames[original];\n            htmlEl.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n            htmlEl.style.direction = 'rtl';\n        }\n    });\n}\nfunction convertPageCalendarDays() {\n    const dayEls = document.querySelectorAll('.notion-calendar-view-day');\n    const headerEl = getHeaderElement();\n    if (!headerEl)\n        return;\n    const orig = headerEl.getAttribute('data-original-header') || \"\";\n    const parts = orig.split(/\\s+/);\n    if (parts.length < 2)\n        return;\n    const headerMonthName = parts[0], headerYear = parseInt(parts[1]), headerMonthNum = MONTHS[headerMonthName];\n    if (!headerMonthNum || isNaN(headerYear))\n        return;\n    let currentDate = new Date(headerYear, headerMonthNum - 1, 1);\n    dayEls.forEach(htmlEl => {\n        var _a;\n        let text = ((_a = htmlEl.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || \"\";\n        const monthMatch = text.match(/^(Jan|Feb|Mar|Apr|Jun|Jul|Aug|Sep|Oct|Nov|Dec)/);\n        if (monthMatch) {\n            const monthAbbr = monthMatch[0], dayMatch = text.match(/\\d+/);\n            if (dayMatch) {\n                const dayNum = parseInt(dayMatch[0]), newMonth = MONTHS[monthAbbr];\n                let newYear = currentDate.getFullYear();\n                if (newMonth < (currentDate.getMonth() + 1))\n                    newYear++;\n                currentDate = new Date(newYear, newMonth - 1, dayNum);\n            }\n        }\n        const jDate = jalaali_js_1.default.toJalaali(currentDate);\n        htmlEl.textContent = toPersianDigits(jDate.jd.toString());\n        htmlEl.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n        htmlEl.style.direction = 'rtl';\n        currentDate.setDate(currentDate.getDate() + 1);\n    });\n}\nfunction convertPageCalendar() {\n    convertPageCalendarHeader();\n    convertPageCalendarDayNames();\n    convertPageCalendarDays();\n}\nfunction setupObserver(selector, callback) {\n    const container = document.querySelector(selector);\n    if (!container)\n        return;\n    const observer = new MutationObserver(callback);\n    observer.observe(container, { childList: true, subtree: true, characterData: true });\n}\nchrome.storage.onChanged.addListener((changes, area) => {\n    if (area === 'sync' && (changes[constant_1.STORAGE_KEYS.PERSIAN_INPUT] || changes[constant_1.STORAGE_KEYS.SELECTED_FONT])) {\n        chrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_INPUT, constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n            currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n            if (data[constant_1.STORAGE_KEYS.PERSIAN_INPUT])\n                convertPageCalendar();\n        });\n    }\n});\nchrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_INPUT, constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n    currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n    if (data[constant_1.STORAGE_KEYS.PERSIAN_INPUT]) {\n        convertPageCalendar();\n        setupObserver('.notion-calendar-view', convertPageCalendar);\n        setupObserver('.notion-calendar-header-days', convertPageCalendarDayNames);\n        let timer = null;\n        window.addEventListener('scroll', () => {\n            if (timer)\n                clearTimeout(timer);\n            timer = window.setTimeout(() => convertPageCalendar(), 300);\n        });\n    }\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertCalendar = convertCalendar;\nconst jalaali_js_1 = __importDefault(require(\"jalaali-js\"));\nconst constant_1 = require(\"./constant\");\nconst MONTHS = {\n    January: 1, February: 2, March: 3, April: 4, May: 5, June: 6,\n    July: 7, August: 8, September: 9, October: 10, November: 11, December: 12\n};\nconst persianDayNames = {\n    Sat: \"شنبه\",\n    Sun: \"یکشنبه\",\n    Mon: \"دوشنبه\",\n    Tue: \"سه‌شنبه\",\n    Wed: \"چهارشنبه\",\n    Thu: \"پنج‌شنبه\",\n    Fri: \"جمعه\"\n};\nfunction toPersianDigits(input) {\n    return input.replace(/\\d/g, d => \"۰۱۲۳۴۵۶۷۸۹\"[parseInt(d)]);\n}\nlet currentFont = constant_1.DEFAULT_FONT;\n// Big Calendar\nfunction convertCalendarHeader() {\n    var _a;\n    const smallHeaderEl = document.querySelector('.sc-1htxemp-6.jsehgZ');\n    const bigHeaderEl = document.querySelector('.sc-vb7gpf-1.jIHpro');\n    if (!smallHeaderEl || !bigHeaderEl)\n        return;\n    const text = (_a = smallHeaderEl.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n    if (!text)\n        return;\n    bigHeaderEl.textContent = text;\n    bigHeaderEl.setAttribute('dir', 'rtl');\n    bigHeaderEl.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n}\nfunction convertCalendarDays() {\n    const containers = document.querySelectorAll('[data-grid-date]');\n    containers.forEach(container => {\n        const tsStr = container.getAttribute('data-grid-date');\n        if (!tsStr)\n            return;\n        const baseDate = new Date(parseInt(tsStr));\n        const dayButtons = container.querySelectorAll('.sc-12m9yy-5');\n        dayButtons.forEach((btn, index) => {\n            const cellDate = new Date(baseDate);\n            cellDate.setDate(cellDate.getDate() + index);\n            const jDate = jalaali_js_1.default.toJalaali(cellDate);\n            const dayText = toPersianDigits(jDate.jd.toString());\n            // If it's the 1st day of the month, show month and year\n            if (jDate.jd === 1) {\n                const persianMonth = constant_1.PERSIAN_MONTHS[jDate.jm - 1];\n                const persianYear = toPersianDigits(jDate.jy.toString());\n                let strong = btn.querySelector('strong');\n                if (!strong) {\n                    strong = document.createElement('strong');\n                    btn.insertBefore(strong, btn.firstChild);\n                }\n                strong.textContent = ` ${persianMonth} `;\n                strong.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n                strong.style.direction = 'rtl';\n            }\n            else {\n                // Remove month element if exists\n                const strong = btn.querySelector('strong');\n                if (strong) {\n                    strong.textContent = '';\n                }\n            }\n            // Set day number\n            const span = btn.querySelector('span');\n            if (span) {\n                span.textContent = dayText;\n                span.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n                span.style.direction = 'rtl';\n            }\n        });\n    });\n}\nfunction convertBigCalendar() {\n    convertCalendarHeader();\n    convertCalendarDays();\n}\n// Small Calendar\nfunction convertSmallCalendarHeader() {\n    var _a;\n    convertCalendarHeader();\n    const headerEl = document.querySelector('.sc-1htxemp-6.jsehgZ');\n    if (!headerEl)\n        return;\n    const text = (_a = headerEl.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n    if (!text)\n        return;\n    const parts = text.split(/\\s+/);\n    if (parts.length < 2)\n        return;\n    const monthName = parts[0];\n    const year = parseInt(parts[1]);\n    const monthNum = MONTHS[monthName];\n    if (!monthNum || isNaN(year))\n        return;\n    const gregDate = new Date(year, monthNum - 1, 1);\n    const jDate = jalaali_js_1.default.toJalaali(gregDate);\n    const persianMonth = constant_1.PERSIAN_MONTHS[jDate.jm - 1];\n    const persianYear = toPersianDigits(jDate.jy.toString());\n    headerEl.textContent = `${persianMonth} ${persianYear}`;\n    headerEl.setAttribute('dir', 'rtl');\n    headerEl.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n}\nfunction convertSmallCalendarDays() {\n    const dayEls = document.querySelectorAll('.rdp-month_grid td');\n    dayEls.forEach(td => {\n        const dayStr = td.getAttribute('data-day');\n        if (!dayStr)\n            return;\n        const dateObj = new Date(dayStr);\n        const jDate = jalaali_js_1.default.toJalaali(dateObj);\n        const btn = td.querySelector('button');\n        if (!btn)\n            return;\n        const dayDiv = btn.querySelector('.sc-1htxemp-12.gMCvNC');\n        if (!dayDiv)\n            return;\n        dayDiv.textContent = toPersianDigits(jDate.jd.toString());\n        dayDiv.style.direction = 'rtl';\n        dayDiv.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n    });\n}\nfunction convertSmallCalendar() {\n    convertSmallCalendarHeader();\n    convertSmallCalendarDays();\n}\nfunction convertDayNames() {\n    const dayNameEls = document.querySelectorAll('.sc-1rt47i1-0.sc-lmxfee-0.habFrR');\n    dayNameEls.forEach(el => {\n        var _a;\n        const original = (_a = el.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n        if (original && persianDayNames[original]) {\n            el.textContent = persianDayNames[original];\n            el.setAttribute('dir', 'rtl');\n            el.style.fontFamily = `${currentFont}, ${constant_1.SYSTEM_FONTS}`;\n        }\n    });\n}\nfunction convertCalendar() {\n    convertBigCalendar();\n    convertSmallCalendar();\n    convertDayNames();\n}\nfunction setupObserver(selector, callback) {\n    const container = document.querySelector(selector);\n    if (!container)\n        return;\n    const observer = new MutationObserver(() => callback());\n    observer.observe(container, { childList: true, subtree: true, characterData: true });\n}\n// Listen for storage changes\nchrome.storage.onChanged.addListener((changes, area) => {\n    if (area === 'sync' && (changes[constant_1.STORAGE_KEYS.PERSIAN_INPUT] || changes[constant_1.STORAGE_KEYS.SELECTED_FONT])) {\n        chrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_INPUT, constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n            const persianInput = data[constant_1.STORAGE_KEYS.PERSIAN_INPUT];\n            currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n            if (persianInput)\n                convertCalendar();\n        });\n    }\n});\n// Init based on popup settings\nchrome.storage.sync.get([constant_1.STORAGE_KEYS.PERSIAN_INPUT, constant_1.STORAGE_KEYS.SELECTED_FONT], data => {\n    const persianInput = data[constant_1.STORAGE_KEYS.PERSIAN_INPUT];\n    currentFont = data[constant_1.STORAGE_KEYS.SELECTED_FONT] || constant_1.DEFAULT_FONT;\n    if (persianInput) {\n        convertCalendar();\n        setupObserver('.sc-vb7gpf-1.jIHpro', convertBigCalendar);\n        setupObserver('.sc-1htxemp-14.hBaYBJ', () => { convertSmallCalendar(); convertDayNames(); });\n        let timer = null;\n        window.addEventListener('scroll', () => {\n            if (timer)\n                clearTimeout(timer);\n            timer = window.setTimeout(() => convertCalendar(), 300);\n        });\n    }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(283);\n"],"names":["Object","defineProperty","exports","value","handleDateMentions","persianInput","console","log","constant_1","LOG_PREFIX","convertedMentionCount","savedState","localStorage","getItem","PANEL_STATE_KEY","state","JSON","parse","isPanelHidden","hidden","position","panelPosition","error","loadPanelState","floatingPanel","document","body","contains","createElement","id","PANEL_ID","style","cssText","bottom","right","top","left","header","innerHTML","PANEL_TITLE","MINIMIZE_BTN_ID","HIDE_BTN_ID","appendChild","content","CONTENT_ID","element","handle","pos1","pos2","pos3","pos4","dragMouseDown","e","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","offsetTop","offsetLeft","savePanelState","onmousedown","makeDraggable","MinimizeBtn","querySelector","addEventListener","contentArea","display","textContent","hideBtn","hidePanel","showButton","removeChild","SHOW_BTN_ID","title","showPanel","createShowButton","createFloatingPanel","mentions","querySelectorAll","SELECTOR_MENTIONS","convertedDates","clear","forEach","reminder","trimmedText","trim","dateUtils_1","isPersianDate","dateInfo","text","cleaned","replace","date","parseGregorian","extractDateFromMention","jalali","jalaali","toJalaali","persianDate","PERSIAN_MONTHS","jm","jd","jy","set","size","NO_DATES_MESSAGE","html","gregorianDate","CLICK_INSTRUCTION","target","getAttribute","conversion","get","scrollIntoView","behavior","block","originalElement","backgroundColor","setTimeout","updatePanelContent","removeFloatingPanel","clearDateMentionConversions","count","Map","setItem","stringify","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","convertTableDates","startTime","Date","now","isProcessingDateChanges","convertedDateCount","elements","SELECTOR_TABLE_DATES","el","isElementVisible","currentText","innerText","startDateText","endDateText","split","map","s","startDate","endDate","jalaliStart","test","formatJalaliVerbose","formatJalali","jalaliEnd","jalaliRange","finalText","applyPersianNumbersIfEnabled","hasAttribute","DATASET_KEYS","ORIGINAL_DATE","setAttribute","originalDate","removeAttribute","gregorianStart","persianToGregorian","gregorianEnd","gregorianRange","lastDateConversionTime","dateConversionErrorCount","resetAllConversions","resetDateCount","wasDateConversionRecent","timeThresholdMs","TIME_THRESHOLD_MS","isDateConversionInProgress","getErrorCount","j","chrome","storage","sync","STORAGE_KEYS","PERSIAN_NUMBERS","data","d","parseInt","offsetWidth","offsetHeight","getClientRects","length","__importDefault","mod","__esModule","convertTimeline","jalaali_js_1","MONTHS","January","February","March","April","May","June","July","August","September","October","November","December","toPersianDigits","input","currentFont","DEFAULT_FONT","SELECTED_FONT","_a","headerSpan","parts","monthName","year","monthNum","isNaN","gregDate","jDate","default","newText","toString","fontFamily","SYSTEM_FONTS","window","__timelineBaseDate","convertTimelineHeader","baseDate","dayContainer","Array","from","index","cellDate","setDate","getDate","dayText","span","circle","remove","convertTimelineDays","container","label","undefined","parseFloat","daysFromStart","Math","round","persianMonth","convertTimelineMonthLabels","onChanged","addListener","changes","area","MutationObserver","observe","childList","subtree","characterData","setupTimelineObserver","tableDateConverter_1","convertNotif_1","fontInjection_1","fontInjectionEnabled","isProcessingDateConversion","debounceTimer","processDates","tableCount","mentionCount","totalCount","errorCount","runtime","sendMessage","MESSAGE_TYPES","ERROR_COUNT_CHANGED","PERSIAN_INPUT","FONT_INJECTION_ENABLED","injectFonts","onMessage","msg","sender","sendResponse","type","APPLY_SETTINGS","setCurrentFont","selectedFont","CHECK_ERRORS","REFRESH_CONVERSION","totalResetCount","forceReload","RESET_COMPLETE","reloading","location","reload","_b","_c","_d","matches","SELECTOR_DATE_BUTTONS","closest","SELECTOR_PREV_MONTH","SELECTOR_NEXT_MONTH","SELECTOR_DATE_FORMAT_CLEAR","includes","DEBOUNCE_DELAY","SELECTOR_DATE_MENTION","SELECTOR_PROPERTY_VALUE","tagName","SELECTOR_DATE_PICKER_INPUT","clearTimeout","mutations","some","mutation","nodeType","Node","TEXT_NODE","HTMLElement","setInterval","HTML_CONSTANTS","NOTION_URL_PATTERN","UI_ELEMENTS","SELECTOR_REMINDERS","SELECTOR_GLOBAL_FONTS","SELECTOR_RTL_ELEMENTS","SELECTOR_TODO_BLOCK","SELECTOR_TABLE_BLOCK","SELECTOR_BULLETED_LIST","SELECTOR_TOGGLE_BLOCK","SELECTOR_QUOTE_BLOCK","SELECTOR_NUMBERED_LIST","SELECTOR_CODE_BLOCK","SELECTOR_EDITABLE_TEXT","ALL_FONTS_CSS","DEFAULT_FONTS","UNICODE_RANGE","TOAST_ID","STANDARD_DATE_FORMAT","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","en_name","fa_name","creator","getURL","join","CONVERTED","PERSIAN_TOGGLE","FONT_TOGGLE","RESET_BUTTON","ERROR_MESSAGE","FONT_SELECTOR_CONTAINER","FONT_SELECTOR","FONT_AUTHOR","STATUS","CALL_MESSAGE","TITLE","HEADER_TEXT","CALENDAR_LABEL","FONT_LABEL","FOOTER_NAME","m","match","mon","toLowerCase","month","day","keys","yesterday","tomorrow","getTime","padStart","persianDateStr","isValidJalaaliDate","gregorian","toGregorian","gy","gm","gd","standardFormat","module","prototype","call","getMonth","getFullYear","d2j","g2d","jalaaliMonthLength","isLeapJalaaliYear","jalCal","j2d","d2g","jalaaliToDateObject","jalaaliWeek","dayOfWeek","getDay","startDayDifference","endDayDifference","saturday","friday","breaks","jump","leap","n","i","bl","jp","Error","div","jalCalLeap","withoutLeap","leapJ","r","jdn","k","h","ms","gregorianCalenderDate","a","b","saveSelectedFont","loadSelectedFont","fontStyleElement","containsPersianArabic","applyGlobalFontStyles","applyRTLToNewParts","applyRTLToNumberedLists","applyRTLToQuotes","applyRTLToToggleBlocks","enabled","head","observer","addedNodes","node","ELEMENT_NODE","processSubtree","processTextNode","applyAdditionalRTLLogic","setupObserver","direction","textAlign","removeProperty","pseudo","bq","inner","borderRight","borderLeft","paddingLeft","paddingRight","toggleBlock","flexContainer","firstElementChild","disconnect","parentElement","root","walker","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","updateNumberedListBlock","getPropertyValue","persianContent","computed","getComputedStyle","originalPaddingLeft","originalPaddingRight","setProperty","convertPageCalendar","Jan","Feb","Mar","Apr","Jun","Jul","Aug","Sep","Oct","Nov","Dec","persianDayNames","Sun","Mon","Tue","Wed","Thu","Fri","Sat","getHeaderElement","convertPageCalendarDayNames","htmlEl","original","headerEl","persianYear","convertPageCalendarHeader","dayEls","headerMonthName","headerYear","headerMonthNum","currentDate","monthMatch","monthAbbr","dayMatch","dayNum","newMonth","newYear","convertPageCalendarDays","selector","callback","timer","convertCalendar","convertCalendarHeader","smallHeaderEl","bigHeaderEl","convertBigCalendar","tsStr","btn","strong","insertBefore","firstChild","convertSmallCalendar","convertSmallCalendarHeader","td","dayStr","dateObj","dayDiv","convertDayNames","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}